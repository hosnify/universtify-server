{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","API/auth.js","API/notificationAPI.js","components/notification/notificationList.js","components/notification/notificationPopUp.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","API/studentAPI.js","API/enrollmentAPI.js","components/enrollment/StudentEnrollmentListResults.js","components/AlertDialog.js","components/enrollment/StudentEnrolledCoursesListResults.js","components/student/StudentListResults.js","components/student/StudentListToolbar.js","pages/student/StudentList.js","API/superVisorAPI.js","API/coordinatorAPI.js","pages/Login.js","pages/NotFound.js","components/course/courseListToolbar.js","API/courseAPI.js","utils/gpa.js","components/enrollment/CourseEnrollmentListResult.js","components/course/CourseListResult.js","pages/course/CourseList.js","components/enrollment/EnrollmentListResult.js","pages/enrollments/EnrollmentList.js","components/superVisor/SuperVisorListToolbar.js","components/superVisor/SuperVisorListResults.js","pages/supervisor/SupervisorList.js","API/majorAPI.js","components/major/AddMajor.js","components/course/AddCourse.js","pages/course/AddCoursePage.js","components/course/CourseDetails.js","pages/course/CourseDetailsPage.js","pages/PlanAhead.js","API/filesAPI.js","components/superVisor/supervisorProfile/SuperVisorProfile.js","components/settings/SettingsPassword.js","components/superVisor/supervisorProfile/SuperVisorProfileDetails.js","pages/supervisor/SuperVisorAccount.js","pages/enrollments/StudentEnrollmentsList.js","utils/courseUtils.js","components/course/CourseRegistrationListResults.js","components/course/courseRegistrationListToolbar.js","pages/course/CourseRegistration.js","components/course/CourseFinishedListResults.js","pages/course/CourseFinished.js","components/student/studentprofile/StudentProfile.js","components/student/studentprofile/StudentProfileDetails.js","pages/student/StudentAccount.js","components/student/AddStudent.js","pages/student/AddStudentPage.js","components/superVisor/AddSupervisor.js","pages/supervisor/AddSuperVisorPage.js","pages/enrollments/StudentEnrolledCourses.js","components/coordinator/CoordinatorListToolbar.js","components/coordinator/CoordinatorListResults.js","pages/coordinator/CoordinatorList.js","components/coordinator/coordinatorProfile/CoordinatorProfile.js","components/coordinator/coordinatorProfile/CoordinatorProfileDetails.js","pages/coordinator/CoordinatorAccount.js","components/coordinator/AddCoordinator.js","pages/coordinator/AddCoordinatorPage.js","API/semesterAPI.js","components/semester/SemesterListResults.js","components/semester/SemesterListToolbar.js","pages/semester/SemesterList.js","components/semester/AddSemester.js","pages/semester/AddSemesterPage.js","components/semester/StudentSemesterListResults.js","pages/semester/StudentSemesterList.js","components/student/studentprofile/EditStudentProfileDetails.js","pages/student/EditStudentPage.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","blue","secondary","red","text","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","jwt","require","login","email","password","fetch","method","JSON","stringify","headers","res","status","json","then","data","token","Error","error","UserContext","createContext","currentUser","verify","localStorage","getItem","user","err","console","log","Accept","createNotificationForStudent","id","notification","createNotificationForSupervisor","UpdateNotification","root","maxWidth","inline","display","NotificationList","props","classes","handleReadNotification","handleUpdateNotification","List","className","notifications","map","Fragment","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","avatar","ListItemText","Typography","component","variant","color","title","Grid","wrap","senderName","green","subText","senderEmail","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","style","lightBlue","Divider","NotificationPopUp","useState","setNotifications","popupId","popupState","marginRight","bindTrigger","Badge","badgeContent","filter","length","Popover","bindPopover","anchorOrigin","vertical","transformOrigin","Box","p","appBar","divider","DashboardNavbar","onMobileNavOpen","rest","navigate","useNavigate","useContext","setUser","useEffect","logout","removeItem","AppBar","position","elevation","Toolbar","maxHeight","sx","flexGrow","Hidden","lgDown","Button","paddingRight","lgUp","NavItem","href","Icon","icon","useLocation","active","matchPath","path","end","pathname","disableGutters","py","RouterLink","justifyContent","textTransform","mr","to","size","DashboardSidebar","onMobileClose","openMobile","items","role","AccountCircleIcon","LibraryAddIcon","CardMembershipIcon","LibraryBooksIcon","AssignmentIcon","PeopleAltIcon","SupervisorAccountIcon","content","flexDirection","justifyItems","gap","cursor","fname","lname","level","item","Drawer","anchor","onClose","open","PaperProps","overflow","defaultProps","DashboardLayoutRoot","experimentalStyled","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","api","getStudent","getEnrollmentByStudent","getAllEnrollments","getAllEnrollmentsByCourseId","getCurrentEnrolledCoursesByStudentId","createOne","enrollment","deleteEnrollment","UpdateEnrollment","EndEnrollment","finishCourseData","StudentEnrollmentListResults","limit","setLimit","page","setPage","enrollments","setEnrollment","enrollmentsData","handleApprove","enrollmentData","updatedEnrollment","student","course","name","handleDelete","handleCancel","courseName","supervisorId","enrollmentTableMetaData","Card","minWidth","Table","TableHead","TableRow","metaData","TableCell","TableBody","slice","hover","createdAt","toString","updatedAt","supervisor","Chip","InfoOutlined","label","clickable","isAproved","TablePagination","count","onPageChange","event","newPage","onRowsPerPageChange","target","value","rowsPerPage","rowsPerPageOptions","AlertDialog","React","setOpen","handleClose","buttonText","Dialog","aria-labelledby","aria-describedby","fullWidth","DialogTitle","DialogContent","DialogActions","button","StudentEnrolledCoursesListResults","StudentListResults","students","setStudents","studentsData","studentData","avatarUrl","major","code","coursesFinished","creditHave","includes","StudentListToolbar","StudentList","Helmet","minHeight","Container","pt","getAllSuperVisors","getCoordinator","Login","initialValues","validationSchema","Yup","shape","max","required","onSubmit","setItem","currentuser","userData","alert","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","mb","gutterBottom","TextField","helperText","onBlur","onChange","type","placeholder","disabled","NotFound","align","textAlign","marginTop","CourseListToolbar","getAllCoursesByMinorAndLevel","minor","gpaConverter","grade","CourseEnrollmentListResult","setEnrollments","courseId","handleAddResult","result","prompt","studentID","semesterId","credit","instructorId","CourseListResults","courses","setCourses","coursesData","courseData","courseCode","subheader","prerequisites","CourseList","CourseListResult","EnrollmentListResults","EnrollmentList","EnrollmentListResult","SuperVisorListToolbar","SuperVisorListResults","gender","superVisors","setSuperVisors","superVisorsData","superVisorData","SupervisorList","getAllMajors","createMajor","AddMajor","minorId","setValues","handleAdd","reason","autoComplete","noValidate","CardHeader","CardContent","container","spacing","md","xs","Snackbar","autoHideDuration","Alert","severity","AddCourse","majorId","instructors","setInstructors","majors","setMajors","types","instructorsData","majorsData","checked","newCourse","split","select","Link","majorData","MenuItem","instructorData","FormControlLabel","control","Switch","AddCoursePage","lg","CourseDetails","courseTitle","discreption","instructor","InputProps","readOnly","CourseDetailsPage","useParams","PlanAheadPage","uploadImg","file","form","FormData","append","SuperVisorProfile","handleAddfile","img","files","Date","now","updateAvatar","CardActions","encType","accept","multiple","htmlFor","SettingsPassword","confirm","updateSupervisorPassword","SuperVisorProfileDetails","InputLabelProps","shrink","phone","SuperVisorAccount","StudentEnrollmentList","courseType","CourseRegistrationListResults","majorAndGeneralCourses","minorCourses","isEligble","loggeduser","inputCourse","every","handleEnroll","userId","createEnrollment","courseID","some","isPassed","columnGap","find","CourseRegistrationListToolbar","mt","CourseRegistration","semesters","Array","keys","CourseFinishedListResults","CourseFinished","StudentProfile","StudentProfileDetails","creditDone","numericalGPA","toFixed","numericalLastTermGPA","StudentAccount","AddStudent","supervisors","setSupervisors","supervisorsData","supervisorData","AddStudentPage","AddSuperVisor","AddSuperVisorPage","StudentEnrolledCourses","CoordinatorListToolbar","CoordinatorListResults","coordinators","setCoordinator","coordinatorData","CoordinatorList","CoordinatorProfile","CoordinatorProfileDetails","CoordinatorAccount","AddCoordinator","coordinator","AddCoordinatorPage","getAllSemesters","endSemester","startSemester","createStudentSemester","studentId","SemesterListResults","UpdateSemestersData","semestersData","actionsByStatus","closeRegistrationForSemester","openRegistrationForSemester","semesterData","year","SemesterListToolbar","enableAddSemester","SemesterList","setsemesters","Data","semester","AddSemester","semesterType","toUpperCase","coordinatorId","createSemester","AddSemesterPage","StudentSemesterListResults","handleRegister","updateUser","StudentSemesterList","EditStudent","majorid","minorid","updateStudent","EditStudentPage","routes","element","children","PlanAhead","App","routing","useRoutes","Provider","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42ab3df8.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// prettier-ignore\nimport { createStyles, makeStyles } from '@material-ui/core';\n\n// prettier-ignore\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: colors.blue[400]\n    },\n    secondary: {\n      contrastText: '#ffffff',\n      main: colors.red[700]\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import { createContext } from 'react';\n\nconst jwt = require('jsonwebtoken');\n\n/* eslint-disable arrow-body-style */\n// const server = 'http://localhost:8888';\n\nconst server = ''; // for production => paths is relative\n\n// eslint-disable-next-line import/prefer-default-export\nexport const login = async (email, password) => {\n  const res = await fetch(`${server}/api/login`, {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (res.status === 200) {\n    return res.json().then((data) => {\n      return data.token;\n    });\n  }\n  const error = new Error(res.error);\n  throw error;\n};\n\nexport const getUserDataFromToken = async () => {\n  fetch(`${server}/api/secret`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  })\n    .then((res) => {\n      return res.json().user;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const UserContext = createContext(null);\n\n// eslint-disable-next-line consistent-return\nexport const currentUser = () => {\n  try {\n    const loggedUser = jwt.verify(localStorage.getItem('token'), 'jwt_secret');\n    return loggedUser.user;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n","/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\n// // Generate a unique token for storing your bookshelf data on the backend server.\n// let { token } = localStorage;\n// // eslint-disable-next-line no-multi-assign\n// if (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json'\n  // Authorization: token\n};\n\nexport const createNotificationForStudent = (id, notification) =>\n  fetch(`${api}/student/${id}/notification`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(notification)\n  }).then((res) => res.json());\n\nexport const createNotificationForSupervisor = (id, notification) =>\n  fetch(`${api}/supervisor/${id}/notification`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(notification)\n  }).then((res) => res.json());\n\nexport const UpdateNotification = (id, notification) =>\n  fetch(`${api}/notification/${id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(notification)\n  }).then((res) => res.json());\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton, ListItemSecondaryAction, colors } from '@material-ui/core';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { UpdateNotification } from '../../API/notificationAPI';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\n\nfunction NotificationList({ ...props }) {\n  const classes = useStyles();\n  const handleReadNotification = async (id, status) => {\n    await UpdateNotification(id, status);\n    props.handleUpdateNotification(id);\n  };\n  return (\n    <List className={classes.root}>\n      {props.notifications.map((notification) => (\n        <React.Fragment key={notification.id}>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar alt=\"avatar\" src={notification.data.avatar} />\n              {/* TODO */}\n            </ListItemAvatar>\n            <ListItemText\n              primary={\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color={colors.red[600]}\n                >\n                  {notification.data.title}\n                </Typography>\n              }\n              secondary={\n                <Grid wrap=\"wrap\">\n                  <Typography\n                    component=\"span\"\n                    variant=\"h5\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {notification.data.senderName}\n                  </Typography>\n                  <Typography\n                    component=\"span\"\n                    variant=\"h6\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {` ${notification.data.text}`}\n                  </Typography>\n                  <Typography\n                    component=\"div\"\n                    variant=\"body1\"\n                    color={colors.green[600]}\n                  >\n                    {notification.data.subText}\n                  </Typography>\n                  <Typography\n                    component=\"div\"\n                    variant=\"body1\"\n                    color={colors.blue[600]}\n                  >\n                    Contact:\n                  </Typography>\n                  <Typography\n                    component=\"div\"\n                    variant=\"body1\"\n                    color=\"textPrimary\"\n                  >\n                    {notification.data.senderEmail}\n                  </Typography>\n                </Grid>\n              }\n            />\n            {notification.status === 0 && (\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"read\"\n                  onClick={() => {\n                    handleReadNotification(notification.id, { status: 1 });\n                  }}\n                >\n                  <FiberManualRecordIcon\n                    style={{ color: colors.lightBlue[700] }}\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n          <Divider variant=\"fullWidth\" component=\"li\" />\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\nexport default NotificationList;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Box, IconButton } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport Popover from '@material-ui/core/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport NotificationList from './notificationList';\n\nexport default function NotificationPopUp({ ...props }) {\n  const [notifications, setNotifications] = useState(props.notifications);\n  // useEffect(() => {\n  //   setNotifications(props.notifications);\n  //   console.log(notifications);\n  // }, []);\n  const handleUpdateNotification = (id) => {\n    setNotifications(\n      notifications.map((notification) => ({\n        ...notification,\n        status: notification.id === id ? 1 : notification.status\n      }))\n    );\n  };\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div>\n          <IconButton\n            color=\"inherit\"\n            style={{ marginRight: '10px' }}\n            {...bindTrigger(popupState)}\n          >\n            <Badge\n              badgeContent={\n                notifications.filter(\n                  (notification) => notification.status === 0\n                ).length\n              }\n              color=\"secondary\"\n              variant=\"standard\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center'\n            }}\n          >\n            <Box p={2}>\n              <NotificationList\n                notifications={notifications}\n                handleUpdateNotification={(id) => handleUpdateNotification(id)}\n              />\n            </Box>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport { useContext, useState, useEffect } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Button,\n  Hidden,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UserContext } from '../API/auth';\nimport NotificationPopUp from './notification/notificationPopUp';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: '100px',\n    borderBottom: `1px solid ${theme.palette.divider}`\n  }\n}));\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const { user, setUser } = useContext(UserContext);\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    setNotifications(user.notifications ? user.notifications : []);\n  });\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.appBar}\n      elevation={0}\n      color=\"inherit\"\n      {...rest}\n    >\n      <Toolbar>\n        <img\n          src=\"/static/images/futurelogo.png\"\n          alt=\"fue\"\n          style={{ maxWidth: '100%', maxHeight: '100%', display: 'block' }}\n        />\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Hidden lgDown>\n          <NotificationPopUp notifications={notifications} />\n          <Button onClick={() => logout()} color=\"inherit\" variant=\"contained\">\n            <Box paddingRight={2}> log out</Box>\n            <InputIcon />\n          </Button>\n        </Hidden>\n\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n            <MenuIcon />\n          </IconButton>\n          <NotificationPopUp notifications={notifications} />\n          <Button onClick={() => logout()} color=\"inherit\" variant=\"contained\">\n            <InputIcon />\n          </Button>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable operator-linebreak */\n/* eslint-disable indent */\n// eslint-disable-next-line camelcase\n\nimport { useEffect, useContext } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography\n} from '@material-ui/core';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport NavItem from './NavItem';\nimport { UserContext } from '../API/auth';\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const items =\n    user && user.role === 'student'\n      ? [\n          {\n            href: `/app/student/${user.id}/account`,\n            icon: AccountCircleIcon,\n            title: 'Profile'\n          },\n          {\n            href: '/app/semesters/registration',\n            icon: LibraryAddIcon,\n            title: 'Registration'\n          },\n          {\n            href: `/app/student/${user.id}/Courses`,\n            icon: CardMembershipIcon,\n            title: 'Courses result'\n          },\n          {\n            href: `/app/student/${user.id}/CurrentCourses`,\n            icon: CardMembershipIcon,\n            title: 'Enrolled Courses'\n          },\n          {\n            href: `/app/student/${user.id}/enrollments`,\n            icon: LibraryBooksIcon,\n            title: 'Enrollments'\n          },\n          {\n            href: '/app/planahead',\n            icon: AssignmentIcon,\n            title: 'Plan Ahead'\n          }\n        ]\n      : user && user.role === 'supervisor'\n      ? [\n          {\n            href: `/app/supervisor/${user.id}/account`,\n            icon: AccountCircleIcon,\n            title: 'Profile'\n          },\n          {\n            href: '/app/students',\n            icon: PeopleAltIcon,\n            title: 'Review Students'\n          },\n          {\n            href: '/app/courses',\n            icon: CardMembershipIcon,\n            title: 'Manage Courses'\n          },\n          // {\n          //   href: '/app/enrollments',\n          //   icon: LibraryBooksIcon,\n          //   title: 'Enrollments'\n          // },\n          {\n            href: '/app/supervisors',\n            icon: SupervisorAccountIcon,\n            title: 'Academic Advisors'\n          }\n        ]\n      : [\n          {\n            href: `/app/coordinator/${user.id}/account`,\n            icon: AccountCircleIcon,\n            title: 'Profile'\n          },\n\n          {\n            href: '/app/semesters',\n            icon: PeopleAltIcon,\n            title: 'Semesters'\n          },\n          {\n            href: '/app/students',\n            icon: PeopleAltIcon,\n            title: 'Students list'\n          },\n          {\n            href: '/app/course/add',\n            icon: CardMembershipIcon,\n            title: 'Add Course '\n          },\n          {\n            href: '/app/supervisor/add',\n            icon: SupervisorAccountIcon,\n            title: 'Add Academic Advisor'\n          },\n          {\n            href: '/app/coordinator/add',\n            icon: SupervisorAccountIcon,\n            title: 'Add Co-ordinator'\n          }\n        ];\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyItems: 'center',\n          p: 2,\n          gap: 1\n        }}\n      >\n        <Avatar\n          component={RouterLink}\n          src={user.avatar}\n          variant=\"circular\"\n          sx={{\n            cursor: 'pointer',\n            width: 64,\n            height: 64\n          }}\n          to=\"/\"\n        />\n        <Typography color=\"textPrimary\" variant=\"h4\">\n          {!!user && user.role === 'supervisor'\n            ? `DR. ${user.fname} ${user.lname}`\n            : ` ${user.fname} ${user.lname}`}\n        </Typography>\n        {!!user && user.role === 'student' && (\n          <Typography color=\"GrayText\" variant=\"h6\">\n            {`level ${!!user && user.level}`}\n          </Typography>\n        )}\n      </Box>\n      <Divider />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyItems: 'center',\n          p: 2,\n          gap: 1\n        }}\n      >\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n          PaperProps={{\n            sx: {\n              width: 256\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden lgDown>\n        <Drawer\n          style={{ overflow: 'auto' }}\n          anchor=\"left\"\n          variant=\"persistent\"\n          open\n          PaperProps={{\n            sx: {\n              width: 256,\n              top: 100,\n              height: '100%',\n              position: 'fixed'\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default DashboardSidebar;\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.default\n  // display: 'flex',\n  // height: '100%',\n  // overflow: 'auto',\n  // width: '100%'\n}));\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'auto',\n  paddingTop: 50,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256\n  }\n}));\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'auto'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = () => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import { AppBar, Box, Toolbar } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: '100px',\n    borderBottom: `1px solid ${theme.palette.divider}`\n  }\n}));\nconst MainNavbar = ({ ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={classes.appBar}\n      elevation={0}\n      color=\"inherit\"\n      {...rest}\n    >\n      <Toolbar>\n        <img\n          src=\"https://s3-eu-west-1.amazonaws.com/forasna/uploads/logos/clogo_2018-03-13-13-39-07_XN4RHiEhyx3kwf5BduWR8gXX.png\"\n          alt=\"fue\"\n          style={{ maxWidth: '100%', maxHeight: '100%', display: 'block' }}\n        />\n        <Box sx={{ flexGrow: 1 }} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = experimentalStyled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%'\n}));\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\n// // Generate a unique token for storing your bookshelf data on the backend server.\n// let { token } = localStorage;\n// // eslint-disable-next-line no-multi-assign\n// if (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json'\n  // Authorization: token\n};\n\nexport const getStudent = (id) =>\n  fetch(`${api}/student/${id}`, { headers }).then((res) => res.json());\n\nexport const getAllStudents = () =>\n  fetch(`${api}/students`).then((res) => res.json());\n\nexport const createOne = (student) =>\n  fetch(`${api}/student/`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(student)\n  }).then((res) => res.json());\n\nexport const updateStudent = (id, student) =>\n  fetch(`${api}/student/${id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(student)\n  }).then((res) => res.json());\n\nexport const updateStudentSupervisor = (id, supervisorid) =>\n  fetch(`${api}/student/${id}/supervisor/${supervisorid}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const updateStudentPassword = (id, password) =>\n  fetch(`${api}/student/${id}/password`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ password })\n  }).then((res) => res.json());\n\nexport const updateStudentAvatar = (id, avatar) =>\n  fetch(`${api}/student/${id}/avatar`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ avatar })\n  }).then((res) => res.json());\n\nexport const updateStudentFinishedCourses = (id, finishedCoursesIDs) =>\n  fetch(`${api}/student/${id}/finishedcourses`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ finishedCoursesIDs })\n  }).then((res) => res.json());\n\nexport const deleteStudent = (id) =>\n  fetch(`${api}/student/${id}`, {\n    method: 'DELETE',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const getCoursesFinishedByStudent = (id) =>\n  fetch(`${api}/student/${id}/courses`, { headers }).then((res) => res.json());\n\nexport const getEnrollmentByStudent = (id) =>\n  fetch(`${api}/student/${id}/enrollments`, { headers }).then((res) =>\n    res.json()\n  );\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\n// // Generate a unique token for storing your bookshelf data on the backend server.\n// let { token } = localStorage;\n// // eslint-disable-next-line no-multi-assign\n// if (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json'\n  // Authorization: token\n};\nexport const getEnrollment = (id) =>\n  fetch(`${api}/enrollment/${id}`, { headers }).then((res) => res.json());\n\nexport const getAllEnrollments = () =>\n  fetch(`${api}/enrollments`).then((res) => res.json());\n\nexport const getAllEnrollmentsByCourseId = (id) =>\n  fetch(`${api}/course/${id}/enrollments`).then((res) => res.json());\n\nexport const getCurrentEnrolledCoursesByStudentId = (id) =>\n  fetch(`${api}/student/${id}/enrolledCourses`, { headers }).then((res) =>\n    res.json()\n  );\nexport const createOne = ({ ...enrollment }) =>\n  fetch(`${api}/enrollment/`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...enrollment })\n  }).then((res) => res.json());\n\nexport const deleteEnrollment = (id) =>\n  fetch(`${api}/enrollment/${id}`, {\n    method: 'DELETE',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const UpdateEnrollment = (id, enrollment) =>\n  fetch(`${api}/enrollment/${id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(enrollment)\n  }).then((res) => res.json());\n\nexport const EndEnrollment = (id, finishCourseData) =>\n  fetch(`${api}/enrollment/${id}/addresult`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(finishCourseData)\n  }).then((res) => res.json());\n","/* eslint-disable no-alert */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\n/* eslint-disable react/prop-types */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { InfoOutlined } from '@material-ui/icons';\nimport { getEnrollmentByStudent } from 'src/API/studentAPI';\n\nimport { deleteEnrollment, UpdateEnrollment } from 'src/API/enrollmentAPI';\nimport {\n  createNotificationForStudent,\n  createNotificationForSupervisor\n} from 'src/API/notificationAPI';\nimport { UserContext } from '../../API/auth';\n\nconst StudentEnrollmentListResults = ({ ...props }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [enrollments, setEnrollment] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (user && user.role === 'student') {\n      getEnrollmentByStudent(user.id).then((enrollmentsData) =>\n        setEnrollment(enrollmentsData.enrollments)\n      );\n    } else {\n      getEnrollmentByStudent(props.id).then((enrollmentsData) => {\n        setEnrollment(enrollmentsData.enrollments);\n      });\n    }\n  }, []);\n\n  const handleApprove = async (enrollmentData, enrollment) => {\n    const updatedEnrollment = await UpdateEnrollment(\n      enrollmentData.id,\n      enrollment\n    );\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `updated your enrollment in course ${enrollmentData.course.name} `,\n        subText: `enrollment current status: ${updatedEnrollment.status}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    }).then((res) => console.log(res));\n    getEnrollmentByStudent(props.id).then((enrollmentsData) => {\n      setEnrollment(enrollmentsData.enrollments);\n    });\n  };\n  const handleDelete = async (enrollmentData) => {\n    await deleteEnrollment(enrollmentData.id);\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `deleted your enrollment in course ${enrollmentData.course.name}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    }).then((res) => console.log(res));\n    getEnrollmentByStudent(props.id).then((enrollmentsData) => {\n      setEnrollment(enrollmentsData.enrollments);\n    });\n  };\n  const handleCancel = async (id, courseName) => {\n    await deleteEnrollment(id);\n    await createNotificationForSupervisor(user.supervisorId, {\n      data: {\n        title: 'Enrollment cancellation',\n        senderName: ` ${user.fname} ${user.lname}`,\n        text: `cancels his enrollment in course ${courseName} `,\n        subText: 'cancelled',\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    }).then((res) => console.log(res));\n    getEnrollmentByStudent(props.id).then((enrollmentsData) => {\n      setEnrollment(enrollmentsData.enrollments);\n    });\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const enrollmentTableMetaData = [\n    'enrollment date',\n    'student ',\n    'course  ',\n    'last update at',\n    'Academic Advisor',\n    'status',\n    user.role === 'supervisor' && 'action'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {enrollmentTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {enrollments\n                .filter(\n                  (enrollmentData) => enrollmentData.status !== 'enrolled'\n                )\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((enrollmentData) => (\n                  <TableRow hover key={enrollmentData.id}>\n                    <TableCell>\n                      {enrollmentData.createdAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${enrollmentData.student.fname} ${enrollmentData.student.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{enrollmentData.course.name}</TableCell>\n                    <TableCell>\n                      {enrollmentData.updatedAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      {enrollmentData.supervisor\n                        ? `DR. ${enrollmentData.supervisor.fname} ${enrollmentData.supervisor.lname}`\n                        : 'Not Yet'}\n                    </TableCell>\n                    <TableCell>\n                      <Chip\n                        icon={<InfoOutlined />}\n                        label={enrollmentData.status}\n                        clickable\n                        color=\"default\"\n                        variant=\"outlined\"\n                      />\n                    </TableCell>\n                    {user.role === 'supervisor' ? (\n                      (enrollmentData.status === 'in review' && (\n                        <TableCell>\n                          <Button\n                            primary\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'enrolled',\n                                isAproved: true,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            Approve\n                          </Button>\n                          <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'rejected',\n                                isAproved: false,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            reject\n                          </Button>\n                        </TableCell>\n                      )) ||\n                      (enrollmentData.status === 'rejected' && (\n                        <TableCell>\n                          <Button\n                            primary\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'in review',\n                                isAproved: true,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            Undo\n                          </Button>\n                          <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDelete(enrollmentData);\n                            }}\n                          >\n                            delete\n                          </Button>\n                        </TableCell>\n                      )) ||\n                      (enrollmentData.status === 'enrolled' && (\n                        <TableCell>\n                          <Button\n                            primary\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'in review',\n                                isAproved: false,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            Unenroll\n                          </Button>\n                        </TableCell>\n                      ))\n                    ) : (\n                      <TableCell>\n                        <Button\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleCancel(\n                              enrollmentData.id,\n                              enrollmentData.course.name\n                            );\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={enrollments.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default StudentEnrollmentListResults;\n","/* eslint-disable react/prop-types */\n/* eslint-disable quotes */\n/* eslint-disable react/jsx-curly-brace-presence */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog({ ...props }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color={props.color} onClick={handleClickOpen}>\n        {props.buttonText}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>{props.data}</DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            close\n          </Button>\n          {props.button}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/* eslint-disable no-alert */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\n/* eslint-disable react/prop-types */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { InfoOutlined } from '@material-ui/icons';\n\nimport {\n  deleteEnrollment,\n  UpdateEnrollment,\n  getCurrentEnrolledCoursesByStudentId\n} from 'src/API/enrollmentAPI';\nimport { createNotificationForStudent } from 'src/API/notificationAPI';\nimport { UserContext } from '../../API/auth';\n\nconst StudentEnrolledCoursesListResults = ({ ...props }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [enrollments, setEnrollment] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (user && user.role === 'student') {\n      getCurrentEnrolledCoursesByStudentId(user.id).then((enrollmentsData) =>\n        setEnrollment(enrollmentsData)\n      );\n    } else {\n      getCurrentEnrolledCoursesByStudentId(props.id).then((enrollmentsData) => {\n        setEnrollment(enrollmentsData);\n      });\n    }\n  });\n\n  const handleApprove = async (enrollmentData, enrollment) => {\n    const updatedEnrollment = await UpdateEnrollment(\n      enrollmentData.id,\n      enrollment\n    );\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `updated your enrollment in course ${enrollmentData.course.name} `,\n        subText: `enrollment current status: ${updatedEnrollment.status}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    }).then((res) => console.log(res));\n    getCurrentEnrolledCoursesByStudentId(props.id).then((enrollmentsData) => {\n      setEnrollment(enrollmentsData);\n    });\n  };\n  const handleDelete = async (enrollmentData) => {\n    await deleteEnrollment(enrollmentData.id);\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `deleted your enrollment in course ${enrollmentData.course.name}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    });\n    getCurrentEnrolledCoursesByStudentId(props.id).then((enrollmentsData) => {\n      setEnrollment(enrollmentsData);\n    });\n  };\n\n  const handleCancel = async (id) => {\n    await deleteEnrollment(id);\n    getCurrentEnrolledCoursesByStudentId(props.id).then((enrollmentsData) => {\n      setEnrollment(enrollmentsData);\n    });\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const enrollmentTableMetaData = [\n    'enrollment date',\n    'student ',\n    'course  ',\n    'last update at',\n    'Academic Advisor',\n    'status',\n    user.role === 'supervisor' && 'action'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {enrollmentTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {enrollments\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((enrollmentData) => (\n                  <TableRow hover key={enrollmentData.id}>\n                    <TableCell>\n                      {enrollmentData.createdAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${enrollmentData.student.fname} ${enrollmentData.student.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{enrollmentData.course.name}</TableCell>\n                    <TableCell>\n                      {enrollmentData.updatedAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      {enrollmentData.supervisor\n                        ? `DR. ${enrollmentData.supervisor.fname} ${enrollmentData.supervisor.lname}`\n                        : 'Not Yet'}\n                    </TableCell>\n                    <TableCell>\n                      <Chip\n                        icon={<InfoOutlined />}\n                        label={enrollmentData.status}\n                        clickable\n                        color=\"default\"\n                        variant=\"outlined\"\n                      />\n                    </TableCell>\n                    {user.role === 'supervisor' ? (\n                      (enrollmentData.status === 'in review' && (\n                        <TableCell>\n                          <Button\n                            primary\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'enrolled',\n                                isAproved: true,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            Approve\n                          </Button>\n                          <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'rejected',\n                                isAproved: false,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            reject\n                          </Button>\n                        </TableCell>\n                      )) ||\n                      (enrollmentData.status === 'rejected' && (\n                        <TableCell>\n                          <Button\n                            primary\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'in review',\n                                isAproved: true,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            Undo\n                          </Button>\n                          <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDelete(enrollmentData);\n                            }}\n                          >\n                            delete\n                          </Button>\n                        </TableCell>\n                      )) ||\n                      (enrollmentData.status === 'enrolled' && (\n                        <TableCell>\n                          <Button\n                            primary\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleApprove(enrollmentData, {\n                                status: 'in review',\n                                isAproved: false,\n                                supervisorId: user.id\n                              });\n                            }}\n                          >\n                            Unenroll\n                          </Button>\n                        </TableCell>\n                      ))\n                    ) : (\n                      <TableCell>\n                        <Button\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleCancel(enrollmentData.id);\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={enrollments.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default StudentEnrolledCoursesListResults;\n","/* eslint-disable no-confusing-arrow */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/jsx-wrap-multilines */\nimport { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Chip,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Button\n} from '@material-ui/core';\nimport { InfoOutlined } from '@material-ui/icons';\nimport { getAllStudents } from 'src/API/studentAPI';\nimport StudentEnrollmentListResults from '../enrollment/StudentEnrollmentListResults';\nimport AlertDialog from '../AlertDialog';\nimport StudentEnrolledCoursesListResults from '../enrollment/StudentEnrolledCoursesListResults';\nimport { UserContext } from '../../API/auth';\n\nconst StudentListResults = ({ ...rest }) => {\n  const { user } = useContext(UserContext);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [students, setStudents] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getAllStudents().then((studentsData) =>\n      setStudents(\n        studentsData.filter((student) =>\n          user.role === 'supervisor' ? student.supervisorId === user.id : true\n        )\n      )\n    );\n  }, []);\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleEditStudent = (id) => {\n    navigate(`/app/student/${id}/edit`);\n  };\n  const studentTableMetaData = [\n    'ID',\n    'Student name',\n    'Level',\n    'Major',\n    'Completed CreditHours',\n    'Requested CreditHours',\n    'Courses finished',\n    'Status',\n    'action'\n  ];\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {studentTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {students\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((studentData) => (\n                  <TableRow hover key={studentData.id}>\n                    <TableCell>{studentData.id}</TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar src={studentData.avatarUrl} sx={{ mr: 2 }} />\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${studentData.fname} ${studentData.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{studentData.level}</TableCell>\n                    <TableCell>\n                      {studentData.major ? studentData.major.code : 'NULL'}\n                    </TableCell>\n                    <TableCell>\n                      {(studentData.coursesFinished.length * 3).toString()}\n                      {/* TODO: change with CreditHoursDone */}\n                    </TableCell>\n                    <TableCell>{studentData.creditHave}</TableCell>\n                    <TableCell>\n                      {studentData.coursesFinished.length.toString()}\n                    </TableCell>\n                    <TableCell>\n                      {studentData.enrollments\n                        .map((enrollment) => enrollment.status)\n                        .includes('in review') && (\n                        <Chip\n                          icon={<InfoOutlined />}\n                          label=\"need review\"\n                          clickable\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </TableCell>\n\n                    {user.role === 'supervisor' && (\n                      <TableCell>\n                        <AlertDialog\n                          buttonText=\"Enrollments\"\n                          title={\n                            <Typography variant=\"h3\">\n                              {`student name :  ${studentData.fname} ${studentData.lname}`}\n                            </Typography>\n                          }\n                          color=\"primary\"\n                          data={\n                            <Grid>\n                              <StudentEnrollmentListResults\n                                id={studentData.id}\n                              />\n                              <StudentEnrolledCoursesListResults\n                                id={studentData.id}\n                              />\n                            </Grid>\n                          }\n                        />\n                      </TableCell>\n                    )}\n                    {user.role === 'coordinator' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          onClick={() => handleEditStudent(studentData.id)}\n                        >\n                          Edit\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={students.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default StudentListResults;\n","/* eslint-disable no-unused-vars */\nimport { Box, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../API/auth';\n\nconst StudentListToolbar = (props) => {\n  const navigate = useNavigate();\n  const handleAddButton = () => {\n    navigate('/app/student/add');\n  };\n  const { user } = useContext(UserContext);\n\n  return (\n    <Box {...props}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {user && user.role === 'coordinator' && (\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAddButton}>\n            Add New\n            <AddIcon />\n          </Button>\n        )}\n      </Box>\n      {/* <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon fontSize=\"small\" color=\"action\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search by student name\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box> */}\n    </Box>\n  );\n};\n\nexport default StudentListToolbar;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport StudentListResults from 'src/components/student/StudentListResults';\nimport StudentListToolbar from 'src/components/student/StudentListToolbar';\n\nconst StudentList = () => (\n  <>\n    <Helmet>\n      <title>Students</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <StudentListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <StudentListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default StudentList;\n","/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\n// // Generate a unique token for storing your bookshelf data on the backend server.\n// let { token } = localStorage;\n// // eslint-disable-next-line no-multi-assign\n// if (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json'\n  // Authorization: token\n};\n\nexport const getSuperVisor = (id) =>\n  fetch(`${api}/supervisor/${id}`, { headers }).then((res) => res.json());\n\nexport const getAllSuperVisors = () =>\n  fetch(`${api}/supervisors`).then((res) => res.json());\n\nexport const createOne = (supervisor) =>\n  fetch(`${api}/supervisor/`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(supervisor)\n  }).then((res) => res.json());\n\nexport const updateSuperVisor = (id, supervisor) =>\n  fetch(`${api}/supervisor/${id}/supervisor/${supervisor}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const updateSupervisorPassword = (id, password) =>\n  fetch(`${api}/supervisor/${id}/password`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ password })\n  }).then((res) => res.json());\n\nexport const updateSupervisorAvatar = (id, avatar) =>\n  fetch(`${api}/supervisor/${id}/avatar`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ avatar })\n  }).then((res) => res.json());\n\nexport const deleteSuperVisor = (id) =>\n  fetch(`${api}/supervisor/${id}`, {\n    method: 'DELETE',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n","/* eslint-disable implicit-arrow-linebreak */\n// const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production => paths is relative\n\nconst headers = {\n  Accept: 'application/json'\n};\n\nexport const getCoordinator = (id) =>\n  fetch(`${api}/coordinator/${id}`, { headers }).then((res) => res.json());\n\nexport const getAllCoordinators = () =>\n  fetch(`${api}/coordinators`).then((res) => res.json());\n\nexport const createOneCoordinator = (coordinator) =>\n  fetch(`${api}/coordinator/`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(coordinator)\n  }).then((res) => res.json());\n\nexport const updateCoordinator = (id, coordinator) =>\n  fetch(`${api}/coordinator/${id}/coordinator/${coordinator}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const updateCoordinatorPassword = (id, password) =>\n  fetch(`${api}/coordinator/${id}/password`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ password })\n  }).then((res) => res.json());\n\nexport const updateCoordinatorAvatar = (id, avatar) =>\n  fetch(`${api}/coordinator/${id}/avatar`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ avatar })\n  }).then((res) => res.json());\n\nexport const deleteCoordinator = (id) =>\n  fetch(`${api}/coordinator/${id}`, {\n    method: 'DELETE',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n","/* eslint-disable no-unused-expressions */\nimport { useContext } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { getStudent } from 'src/API/studentAPI';\nimport { getSuperVisor } from 'src/API/superVisorAPI';\nimport { getCoordinator } from 'src/API/coordinatorAPI';\nimport { currentUser, login, UserContext } from '../API/auth';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  // eslint-disable-next-line no-unused-vars\n  const { user, setUser } = useContext(UserContext);\n\n  return (\n    <>\n      <Helmet>\n        <title>Login </title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: 'user@future.edu',\n              password: 'Password'\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email('Must be a valid email')\n                .max(255)\n                .required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={async (event) => {\n              try {\n                const token = await login(event.email, event.password);\n                localStorage.setItem('token', token);\n                const currentuser = currentUser();\n                setUser(currentuser);\n                if (currentuser && currentuser.role === 'student') {\n                  await getStudent(currentuser.id).then((userData) => {\n                    setUser(userData);\n                  });\n                } else if (currentuser && currentuser.role === 'supervisor') {\n                  await getSuperVisor(currentuser.id).then((userData) => {\n                    setUser(userData);\n                  });\n                } else if (currentuser && currentuser.role === 'coordinator') {\n                  await getCoordinator(currentuser.id).then((userData) => {\n                    setUser(userData);\n                  });\n                }\n                navigate(`/app/${currentuser.role}/${currentuser.id}/account`);\n              } catch (error) {\n                alert('wrong email or password');\n                console.error(error);\n              }\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign into the uniersity platform\n                  </Typography>\n                </Box>\n\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  placeholder={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Typography } from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 </title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","/* eslint-disable no-unused-vars */\nimport { Box, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../API/auth';\n\nconst CourseListToolbar = (props) => {\n  const { user } = useContext(UserContext);\n  const navigate = useNavigate();\n  const handleAddButton = () => {\n    navigate('/app/course/add');\n  };\n  return (\n    <Box {...props}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {user && user.role === 'coordinator' && (\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAddButton}>\n            Add course\n            <AddIcon />\n          </Button>\n        )}\n      </Box>\n      {/* <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon fontSize=\"small\" color=\"action\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search by supervisor name\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box> */}\n    </Box>\n  );\n};\n\nexport default CourseListToolbar;\n","/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\n// // Generate a unique token for storing your bookshelf data on the backend server.\n// let { token } = localStorage;\n// // eslint-disable-next-line no-multi-assign\n// if (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json'\n  // Authorization: token\n};\nexport const getCourse = (id) =>\n  fetch(`${api}/course/${id}`, { headers }).then((res) => res.json());\n\nexport const getAllCourses = () =>\n  fetch(`${api}/courses`).then((res) => res.json());\n\nexport const getAllCoursesByMajorAndLevel = (major, level) =>\n  fetch(`${api}/courses/major/${major}/${level}`).then((res) => res.json());\n\nexport const getAllCoursesByMinorAndLevel = (minor, level) =>\n  fetch(`${api}/courses/minor/${minor}/${level}`).then((res) => res.json());\n\nexport const createOne = (course) =>\n  fetch(`${api}/course/`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(course)\n  }).then((res) => res.json());\n\nexport const deleteCourse = (id) =>\n  fetch(`${api}/course/${id}`, {\n    method: 'DELETE',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const updateCoursePrerequisites = (id, prerequisites) =>\n  fetch(`${api}/course/${id}/prerequisites`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(prerequisites)\n  }).then((res) => {\n    res.json();\n  });\n","/* eslint-disable consistent-return */\n// eslint-disable-next-line import/prefer-default-export\nexport const gpaConverter = (grade) => {\n  if (grade > 90) return 'A';\n  if (grade <= 90 && grade > 85) return 'A-';\n  if (grade <= 85 && grade > 80) return 'B+';\n  if (grade <= 80 && grade > 75) return 'B';\n  if (grade <= 75 && grade > 70) return 'B-';\n  if (grade <= 70 && grade > 65) return 'C+';\n  if (grade <= 65 && grade > 60) return 'C';\n\n  if (grade <= 60 && grade > 55) return 'C-';\n  if (grade <= 55 && grade > 53) return 'D+';\n  if (grade <= 53 && grade >= 50) return 'D';\n  if (grade < 50) return 'F';\n};\n","/* eslint-disable no-alert */\n/* eslint-disable react/prop-types */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport {\n  deleteEnrollment,\n  getAllEnrollmentsByCourseId,\n  UpdateEnrollment,\n  EndEnrollment\n} from 'src/API/enrollmentAPI';\nimport { InfoOutlined } from '@material-ui/icons';\nimport { createNotificationForStudent } from 'src/API/notificationAPI';\nimport { gpaConverter } from 'src/utils/gpa';\n\nimport { UserContext } from '../../API/auth';\n\nconst CourseEnrollmentListResult = (props) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [enrollments, setEnrollments] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    getAllEnrollmentsByCourseId(props.courseId).then((enrollmentsData) => {\n      console.log(enrollmentsData);\n      setEnrollments(\n        enrollmentsData.enrollments.filter(\n          (enrollment) => enrollment.status === 'enrolled'\n        )\n      );\n    });\n  }, []);\n  const handleApprove = async (enrollmentData, enrollment) => {\n    const updatedEnrollment = await UpdateEnrollment(\n      enrollmentData.id,\n      enrollment\n    );\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `updated your enrollment in course ${enrollmentData.course.name} `,\n        subText: `enrollment current status: ${updatedEnrollment.status}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    });\n\n    getAllEnrollmentsByCourseId(props.courseId).then((enrollmentsData) =>\n      setEnrollments(enrollmentsData.enrollments)\n    );\n  };\n  const handleDelete = async (enrollmentData) => {\n    await deleteEnrollment(enrollmentData.id);\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `deleted your enrollment in course ${enrollmentData.course.name}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    });\n\n    getAllEnrollmentsByCourseId(props.courseId).then((enrollmentsData) =>\n      setEnrollments(enrollmentsData.enrollments)\n    );\n  };\n  const handleAddResult = async (enrollmentData, result) => {\n    console.log(result);\n    const grade = prompt('Enter Course result  in number from 0 to 100 : ');\n    if (grade !== null && grade !== '' && grade >= 0 && grade <= 100) {\n      await EndEnrollment(enrollmentData.id, { ...result, grade });\n      await createNotificationForStudent(enrollmentData.student.id, {\n        data: {\n          title: 'course result',\n          senderName: `DR. ${user.fname} ${user.lname}`,\n          text: `added your result in course ${enrollmentData.course.name}`,\n          subText: `your result is : ${gpaConverter(grade)}`,\n          avatar: user.avatar,\n          senderEmail: user.email\n        }\n      });\n\n      getAllEnrollmentsByCourseId(props.courseId).then((enrollmentsData) =>\n        setEnrollments(enrollmentsData.enrollments)\n      );\n    } else {\n      alert('Faild : please enter Course result in numbers from 0 to 100');\n    }\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const enrollmentTableMetaData = [\n    'enrollment date',\n    'student ',\n    'course  ',\n    'last update at',\n    'Academic Advisor',\n    'status',\n    'action'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {enrollmentTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {enrollments\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((enrollmentData) => (\n                  <TableRow hover key={enrollmentData.id}>\n                    <TableCell>\n                      {enrollmentData.createdAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${enrollmentData.student.fname} ${enrollmentData.student.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{enrollmentData.course.name}</TableCell>\n                    <TableCell>\n                      {enrollmentData.updatedAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      {enrollmentData.supervisor\n                        ? `DR. ${enrollmentData.supervisor.fname} ${enrollmentData.supervisor.lname}`\n                        : 'Not Yet'}\n                    </TableCell>\n                    <TableCell>\n                      <Chip\n                        icon={<InfoOutlined />}\n                        label={enrollmentData.status}\n                        clickable\n                        color=\"default\"\n                        variant=\"outlined\"\n                      />\n                    </TableCell>\n                    {enrollmentData.status === 'in review' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'enrolled',\n                              isAproved: true,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          Approve\n                        </Button>\n                        <Button\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'rejected',\n                              isAproved: false,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          reject\n                        </Button>\n                      </TableCell>\n                    )}\n                    {enrollmentData.status === 'rejected' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'in review',\n                              isAproved: true,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          Undo\n                        </Button>\n                        <Button\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleDelete(enrollmentData);\n                          }}\n                        >\n                          delete\n                        </Button>\n                      </TableCell>\n                    )}\n                    {enrollmentData.status === 'enrolled' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleAddResult(enrollmentData, {\n                              courseId: enrollmentData.course.id,\n                              studentID: enrollmentData.student.id,\n                              semesterId: enrollmentData.semesterId,\n                              credit: enrollmentData.credit,\n                              instructorId: enrollmentData.course.instructorId\n                            });\n                          }}\n                        >\n                          Add Result\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={enrollments.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default CourseEnrollmentListResult;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/jsx-wrap-multilines */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  List,\n  ListItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport { getAllCourses } from 'src/API/courseAPI';\nimport AlertDialog from '../AlertDialog';\nimport CourseEnrollmentListResult from '../enrollment/CourseEnrollmentListResult';\nimport { UserContext } from '../../API/auth';\n\n// import getInitials from 'src/utils/getInitials';\n\nconst CourseListResults = () => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [courses, setCourses] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    getAllCourses().then((coursesData) => {\n      setCourses(\n        coursesData.filter((course) => course.instructorId === user.id)\n      );\n    });\n  }, []);\n  console.log(courses);\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const courseTableMetaData = [\n    'courseCode',\n    'Course name',\n    'level',\n    'type',\n    'major',\n    'credit',\n    'course prerequisites',\n    'Current Enrollments'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {courseTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {courses\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((courseData) => (\n                  <TableRow hover key={courseData.id}>\n                    <TableCell>{courseData.courseCode}</TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {courseData.name}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{courseData.level}</TableCell>\n                    <TableCell>{courseData.type && courseData.type}</TableCell>\n                    <TableCell>\n                      {courseData.major && courseData.major.name}\n                    </TableCell>\n                    <TableCell>{courseData.credit}</TableCell>\n                    <TableCell>\n                      <AlertDialog\n                        buttonText=\"show prerequisites\"\n                        title={`Course ${courseData.name} prerequisites :`}\n                        color=\"primary\"\n                        data={\n                          <List\n                            subheader=\"Prerequisites :\"\n                            alignItems=\"flex-start\"\n                          >\n                            {courseData.prerequisites.map((course) => (\n                              <ListItem divider key={course.id}>\n                                {`Course : ${course.name} - level: ${course.level}`}\n                              </ListItem>\n                            ))}\n                          </List>\n                        }\n                      />\n                    </TableCell>\n                    {/* <TableCell>\n                      <Button primary> show students </Button>\n                    </TableCell> */}\n                    {user.role === 'supervisor' && (\n                      <TableCell>\n                        <AlertDialog\n                          buttonText=\"Enrollments\"\n                          title={`Course ${courseData.name} enrollments :`}\n                          color=\"primary\"\n                          data={\n                            <CourseEnrollmentListResult\n                              courseId={courseData.id}\n                            />\n                          }\n                        />\n                      </TableCell>\n                    )}\n                    {user.role === 'coordinator' && (\n                      <TableCell>\n                        <Button primary> Update Course </Button>\n                        <Button color=\"secondary\"> delete Course </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={courses.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default CourseListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\nimport CourseListToolbar from 'src/components/course/courseListToolbar';\nimport CourseListResults from 'src/components/course/CourseListResult';\n\nconst CourseList = () => (\n  <>\n    <Helmet>\n      <title>Student</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3,\n        overflow: 'auto'\n      }}\n    >\n      <Container maxWidth={false}>\n        <CourseListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <CourseListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default CourseList;\n","/* eslint-disable no-alert */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport {\n  deleteEnrollment,\n  getAllEnrollments,\n  UpdateEnrollment,\n  EndEnrollment\n} from 'src/API/enrollmentAPI';\nimport { InfoOutlined } from '@material-ui/icons';\nimport { createNotificationForStudent } from 'src/API/notificationAPI';\nimport { UserContext } from '../../API/auth';\n\nconst EnrollmentListResults = () => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [enrollments, setEnrollments] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    getAllEnrollments().then((enrollmentsData) =>\n      setEnrollments(enrollmentsData)\n    );\n  }, []);\n  const handleApprove = async (enrollmentData, enrollment) => {\n    const updatedEnrollment = await UpdateEnrollment(\n      enrollmentData.id,\n      enrollment\n    );\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `updated your enrollment in course ${enrollmentData.course.name} `,\n        subText: `enrollment current status: ${updatedEnrollment.status}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    }).then((res) => console.log(res));\n\n    getAllEnrollments().then((enrollmentsData) =>\n      setEnrollments(enrollmentsData)\n    );\n  };\n  const handleAddResult = async (enrollmentData, result) => {\n    const grade = prompt('Enter Course result in number from 0 to 100 : ');\n    if (grade !== null && grade !== '' && grade >= 0 && grade <= 100) {\n      await EndEnrollment(enrollmentData.id, { ...result, grade });\n      await createNotificationForStudent(enrollmentData.student.id, {\n        data: {\n          title: 'course result',\n          senderName: `DR. ${user.fname} ${user.lname}`,\n          text: `added your result in course ${enrollmentData.course.name}`,\n          subText: `your result is : ${grade}`,\n          avatar: user.avatar,\n          senderEmail: user.email\n        }\n      });\n      getAllEnrollments().then((enrollmentsData) =>\n        setEnrollments(enrollmentsData)\n      );\n    } else {\n      alert('Faild : please enter Course result  in numbers from 0 to 100');\n    }\n  };\n  const handleDelete = async (enrollmentData) => {\n    await deleteEnrollment(enrollmentData.id);\n    await createNotificationForStudent(enrollmentData.student.id, {\n      data: {\n        title: 'enrollment approval',\n        senderName: `DR. ${user.fname} ${user.lname}`,\n        text: `deleted your enrollment in course ${enrollmentData.course.name}`,\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    });\n    getAllEnrollments().then((enrollmentsData) =>\n      setEnrollments(enrollmentsData)\n    );\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const enrollmentTableMetaData = [\n    'enrollment date',\n    'student ',\n    'course  ',\n    'last update at',\n    'Academic Advisor',\n    'status',\n    'action'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {enrollmentTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {enrollments\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((enrollmentData) => (\n                  <TableRow hover key={enrollmentData.id}>\n                    <TableCell>\n                      {enrollmentData.createdAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${enrollmentData.student.fname} ${enrollmentData.student.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{enrollmentData.course.name}</TableCell>\n                    <TableCell>\n                      {enrollmentData.updatedAt.toString().slice(0, 10)}\n                    </TableCell>\n                    <TableCell>\n                      {enrollmentData.supervisor\n                        ? `DR. ${enrollmentData.supervisor.fname} ${enrollmentData.supervisor.lname}`\n                        : 'No Academic Advisor yet'}\n                    </TableCell>\n                    <TableCell>\n                      <Chip\n                        icon={<InfoOutlined />}\n                        label={enrollmentData.status}\n                        clickable\n                        color=\"default\"\n                        variant=\"outlined\"\n                      />\n                    </TableCell>\n                    {enrollmentData.status === 'in review' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'enrolled',\n                              isAproved: true,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          Approve\n                        </Button>\n                        <Button\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'rejected',\n                              isAproved: false,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          reject\n                        </Button>\n                      </TableCell>\n                    )}\n                    {enrollmentData.status === 'rejected' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'in review',\n                              isAproved: true,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          Undo\n                        </Button>\n                        <Button\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleDelete(enrollmentData);\n                          }}\n                        >\n                          delete\n                        </Button>\n                      </TableCell>\n                    )}\n                    {enrollmentData.status === 'enrolled' && (\n                      <TableCell>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleApprove(enrollmentData, {\n                              status: 'in review',\n                              isAproved: false,\n                              supervisorId: user.id\n                            });\n                          }}\n                        >\n                          Unenroll\n                        </Button>\n                        <Button\n                          primary\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleAddResult(enrollmentData, {\n                              courseId: enrollmentData.course.id,\n                              studentID: enrollmentData.student.id,\n                              semesterId: enrollmentData.semesterId,\n                              credit: enrollmentData.credit,\n                              instructorId: enrollmentData.course.instructorId\n                            });\n                          }}\n                        >\n                          Add Result\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={enrollments.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default EnrollmentListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\nimport EnrollmentListResults from 'src/components/enrollment/EnrollmentListResult';\n\nconst EnrollmentList = () => (\n  <>\n    <Helmet>\n      <title>EnrollmentList</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Box sx={{ pt: 3 }}>\n          <EnrollmentListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default EnrollmentList;\n","/* eslint-disable no-unused-vars */\nimport { Box, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../API/auth';\n\nconst SuperVisorListToolbar = (props) => {\n  const { user } = useContext(UserContext);\n  const navigate = useNavigate();\n  const handleAddButton = () => {\n    navigate('/app/supervisor/add');\n  };\n  return (\n    <Box {...props}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {user && user.role === 'coordinator' && (\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAddButton}>\n            Add Academic Advisor\n            <AddIcon />\n          </Button>\n        )}\n      </Box>\n      {/* <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon fontSize=\"small\" color=\"action\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search by supervisor name\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box> */}\n    </Box>\n  );\n};\n\nexport default SuperVisorListToolbar;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { getAllSuperVisors } from 'src/API/superVisorAPI';\n\n// import getInitials from 'src/utils/getInitials';\n\nconst SuperVisorListResults = () => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [superVisors, setSuperVisors] = useState([\n    {\n      id: 1,\n      createdAt: '2021-04-18T02:56:36.252Z',\n      updatedAt: '2021-04-18T02:56:36.257Z',\n      fname: 'Peggy',\n      lname: 'Cummerata',\n      gender: 'MALE',\n      email: 'Cathryn_McLaughlin13@hotmail.com'\n    }\n  ]);\n\n  useEffect(() => {\n    getAllSuperVisors().then((superVisorsData) =>\n      setSuperVisors(superVisorsData)\n    );\n  }, []);\n  console.log(superVisors);\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const superVisorTableMetaData = ['Id', 'Supervisor name', 'email'];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {superVisorTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {superVisors\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((superVisorData) => (\n                  <TableRow hover key={superVisorData.id}>\n                    <TableCell>{superVisorData.id}</TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${superVisorData.fname} ${superVisorData.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{superVisorData.email}</TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={superVisors.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default SuperVisorListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\nimport SuperVisorListToolbar from 'src/components/superVisor/SuperVisorListToolbar';\nimport SuperVisorListResults from 'src/components/superVisor/SuperVisorListResults';\n\nconst SupervisorList = () => (\n  <>\n    <Helmet>\n      <title>Academic Advisor</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <SuperVisorListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <SuperVisorListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default SupervisorList;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\nconst headers = {\n  Accept: 'application/json'\n};\n\nexport const getAllMajors = () =>\n  fetch(`${api}/majors`, { headers }).then((res) => res.json());\n\nexport const createMajor = ({ ...major }) =>\n  fetch(`${api}/major`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...major })\n  }).then((res) => res.json());\n","/* eslint-disable react/jsx-wrap-multilines */\nimport { useState } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  Snackbar,\n  TextField\n} from '@material-ui/core';\nimport { createMajor } from 'src/API/majorAPI';\n\nconst AddMajor = (props) => {\n  const [values, setValues] = useState({ minorId: null });\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleAdd = async () => {\n    await createMajor({ ...values });\n    console.log(values);\n    setOpen(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader=\"\" title=\"Add New Major\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the Major title\"\n                label=\"Title\"\n                name=\"name\"\n                onChange={handleChange}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the Major Code\"\n                label=\"Code\"\n                name=\"code\"\n                onChange={handleChange}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAdd}>\n            Add\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: Major created\n            </Alert>\n          </Snackbar>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AddMajor;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable react/jsx-wrap-multilines */\nimport { useState, useEffect, useContext } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  MenuItem,\n  Snackbar,\n  Switch,\n  TextField\n} from '@material-ui/core';\nimport { createOne, updateCoursePrerequisites } from 'src/API/courseAPI';\nimport { getAllSuperVisors } from 'src/API/superVisorAPI';\nimport { getAllMajors } from 'src/API/majorAPI';\nimport AlertDialog from '../AlertDialog';\nimport AddMajor from '../major/AddMajor';\nimport { UserContext } from '../../API/auth';\n\nconst AddCourse = (props) => {\n  const { user } = useContext(UserContext);\n  const [values, setValues] = useState({ minorId: null, majorId: null });\n  const [open, setOpen] = useState(false);\n  const [instructors, setInstructors] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const [types] = useState([\n    { id: 'majorElective', name: 'Major Elective' },\n    { id: 'majorRequirment', name: 'Major Requirment' },\n    { id: 'universityRequirment', name: 'University Requirment' },\n    { id: 'facultyRequirment', name: 'Faculty Requirment' },\n    { id: 'universityElective', name: 'University Elective' }\n  ]);\n  useEffect(async () => {\n    const instructorsData = await getAllSuperVisors();\n    setInstructors(instructorsData);\n  }, []);\n  useEffect(async () => {\n    const majorsData = await getAllMajors();\n    setMajors(majorsData);\n  }, []);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n      [event.target.name === 'minorId' && event.target.name]: event.target\n        .checked\n        ? values.majorId\n        : null,\n      isElective: values.type === 'majorElective',\n      coordinatorId: user.id\n    });\n  };\n\n  const handleAdd = async () => {\n    const newCourse = await createOne({ ...values });\n    console.log(values);\n\n    await updateCoursePrerequisites(newCourse.id, {\n      prerequisites: values.prerequisites && values.prerequisites.split(',')\n    });\n    setOpen(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader=\"\" title=\"Add New Course\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the Course title\"\n                label=\"Title\"\n                name=\"name\"\n                onChange={handleChange}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"discreption\"\n                name=\"discreption\"\n                onChange={handleChange}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"major\"\n                fullWidth\n                name=\"majorId\"\n                onChange={handleChange}\n                helperText={\n                  <Link\n                    component={AlertDialog}\n                    buttonText=\"Add Major\"\n                    data={<AddMajor />}\n                  />\n                }\n              >\n                {majors.map((majorData) => (\n                  <MenuItem key={majorData.id} value={majorData.id}>\n                    {majorData.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"type\"\n                fullWidth\n                name=\"type\"\n                onChange={handleChange}\n              >\n                {types.map((majorData) => (\n                  <MenuItem key={majorData.id} value={majorData.id}>\n                    {majorData.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Level\"\n                name=\"level\"\n                onChange={handleChange}\n                type=\"number\"\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"credits \"\n                name=\"credit\"\n                onChange={handleChange}\n                type=\"number\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Course Code\"\n                name=\"courseCode\"\n                onChange={handleChange}\n                required\n                variant=\"outlined\"\n                helperText=\"ex: MIS86 \"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"instructor\"\n                name=\"instructorId\"\n                onChange={handleChange}\n                helperText=\"Please select course instructor\"\n              >\n                {instructors.map((instructorData) => (\n                  <MenuItem key={instructorData.id} value={instructorData.id}>\n                    {` DR. ${instructorData.fname} ${instructorData.lname}`}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"prerequisites\"\n                name=\"prerequisites\"\n                onChange={handleChange}\n                required\n                variant=\"outlined\"\n                helperText=\"enter course code seperated by comma  ex: MIS86,MIS89 \"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={!!values.minorId}\n                    onChange={handleChange}\n                    name=\"minorId\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"available for minor students ?\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAdd}>\n            Add\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: course created\n            </Alert>\n          </Snackbar>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AddCourse;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AddCourse from 'src/components/course/AddCourse';\n\nconst AddCoursePage = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <AddCourse />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default AddCoursePage;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nconst CourseDetails = (props) => {\n  const [values, setValues] = useState({\n    courseTitle: 'introduction to computer',\n    discreption: 'introduction to computer programing and operating system',\n    code: 'CS50',\n    instructor: 'adam ',\n    credit: '3',\n    level: '3',\n    major: 'computer',\n    prerequisites: 'cs31,cs41'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader={`id ${props.id} `} title={values.courseTitle} />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"discreption\"\n                name=\"discreption\"\n                onChange={handleChange}\n                required\n                InputProps={{\n                  readOnly: true\n                }}\n                value={values.discreption}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Major\"\n                name=\"Major\"\n                InputProps={{\n                  readOnly: true\n                }}\n                onChange={handleChange}\n                required\n                value={values.major}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Level\"\n                name=\"Level\"\n                onChange={handleChange}\n                type=\"number\"\n                value=\"1\"\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"instructor\"\n                name=\"instructor\"\n                onChange={handleChange}\n                required\n                value={values.instructor}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"credits \"\n                name=\"credit \"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.credit}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"prerequisites\"\n                name=\"prerequisites\"\n                onChange={handleChange}\n                required\n                value={values.prerequisites}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true\n                }}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" disabled>\n            register\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default CourseDetails;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport CourseDetails from 'src/components/course/CourseDetails';\nimport { useParams } from 'react-router-dom';\n\nconst CourseDetailsPage = () => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Helmet>\n        <title>CourseDetailsPage</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={3}>\n            <Grid item lg={8} md={6} xs={12}>\n              <CourseDetails id={id} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CourseDetailsPage;\n","/* eslint-disable object-curly-newline */\nimport { Helmet } from 'react-helmet';\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\n\nconst PlanAheadPage = () => (\n  <>\n    <Helmet>\n      <title>Plan ahead</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <Typography variant=\"h2\">Courses Tree</Typography>\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <img\n              src=\"/static/images/tree.jpg\"\n              alt=\"fue\"\n              style={{\n                maxWidth: '100%',\n                maxHeight: '100%',\n                display: 'block'\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default PlanAheadPage;\n","// const fs = require('fs');\n\n/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\nconst uploadImg = async (file, name) => {\n  const form = new FormData();\n  form.append('avatar', file, name);\n  const res = await fetch(`${api}/avatar/upload`, {\n    method: 'POST',\n    body: form\n  });\n  return !res.error ? name : res.error;\n};\nexport default uploadImg;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useContext } from 'react';\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport uploadImg from 'src/API/filesAPI';\nimport { updateSupervisorAvatar } from 'src/API/superVisorAPI';\nimport { UserContext } from '../../../API/auth';\n\nconst SuperVisorProfile = (props) => {\n  const { user, setUser } = useContext(UserContext);\n  const handleAddfile = async (event) => {\n    const img = event.target.files[0];\n    const res = await uploadImg(img, Date.now() + img.name);\n    const updateAvatar = await updateSupervisorAvatar(\n      user.id,\n      `/static/images/avatars/${res}`\n    );\n    setUser(updateAvatar);\n  };\n  return (\n    <Card {...props}>\n      <CardContent>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Avatar\n            src={user.avatar}\n            sx={{\n              height: 100,\n              width: 100\n            }}\n          />\n          <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n            {` ${user.fname} ${user.lname}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions style={{ justifyContent: 'center' }}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          encType=\"multipart/form-data\"\n          {...props}\n        >\n          <input\n            style={{ display: 'none' }}\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={handleAddfile}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              fullWidth\n            >\n              Upload picture\n            </Button>\n          </label>\n        </form>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default SuperVisorProfile;\n","import { useState, useContext } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField\n} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { updateStudentPassword } from '../../API/studentAPI';\nimport { updateSupervisorPassword } from '../../API/superVisorAPI';\nimport { UserContext } from '../../API/auth';\n\nconst SettingsPassword = (props) => {\n  const { user } = useContext(UserContext);\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n  const [open, setOpen] = useState(false);\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleChangePassword = () => {\n    if (user && user.role === 'student') {\n      updateStudentPassword(user.id, values.password);\n    } else {\n      updateSupervisorPassword(user.id, values.password);\n    }\n    setOpen(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <form {...props}>\n      <Card>\n        <CardHeader subheader=\"Update password\" title=\"Password\" />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleChangePassword}\n          >\n            Update\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: Password Changed\n            </Alert>\n          </Snackbar>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default SettingsPassword;\n","import { useContext } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\nimport { UserContext } from '../../../API/auth';\n\nconst SuperVisorProfileDetails = (props) => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"fname\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.fname}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.lname}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                type=\"number\"\n                value={user.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <SettingsPassword />\n      </Card>\n    </form>\n  );\n};\n\nexport default SuperVisorProfileDetails;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport SuperVisorProfile from 'src/components/superVisor/supervisorProfile/SuperVisorProfile';\nimport SuperVisorProfileDetails from 'src/components/superVisor/supervisorProfile/SuperVisorProfileDetails';\n\nconst SuperVisorAccount = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={4} md={6} xs={12}>\n            <SuperVisorProfile />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <SuperVisorProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default SuperVisorAccount;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\n// import EnrollmentListToolbar from 'src/components/enrollment/EnrollmentListToolbar';\nimport StudentEnrollmentListResults from 'src/components/enrollment/StudentEnrollmentListResults';\nimport { useParams } from 'react-router-dom';\n\nconst StudentEnrollmentList = () => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Helmet>\n        <title>EnrollmentList</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          {/* <EnrollmentListToolbar /> */}\n          <Box sx={{ pt: 3 }}>\n            <StudentEnrollmentListResults id={id} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default StudentEnrollmentList;\n","/* eslint-disable consistent-return */\n// eslint-disable-next-line import/prefer-default-export\nexport const courseType = (type) => {\n  if (type === 'majorElective') return 'Major Elective';\n  if (type === 'majorRequirment') return 'Major Requirment';\n  if (type === 'minorRequirment') return 'Minor Requirment';\n  if (type === 'universityRequirment') return 'University Requirment';\n  if (type === 'facultyRequirment') return 'Faculty Requirment';\n  if (type === 'universityElective') return 'University Elective';\n\n  return 'no type';\n};\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable consistent-return */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable indent */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Button,\n  Card,\n  Chip,\n  List,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  ListItem,\n  Grid\n} from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport {\n  getAllCoursesByMajorAndLevel,\n  getAllCoursesByMinorAndLevel\n} from 'src/API/courseAPI';\nimport { courseType } from 'src/utils/courseUtils';\nimport { getStudent } from 'src/API/studentAPI';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { createNotificationForSupervisor } from 'src/API/notificationAPI';\nimport { createOne as createEnrollment } from '../../API/enrollmentAPI';\nimport { UserContext } from '../../API/auth';\nimport AlertDialog from '../AlertDialog';\n\nconst CourseRegistrationListResults = ({ ...props }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [courses, setCourses] = useState([]);\n  const { user, setUser } = useContext(UserContext);\n  const { semesterId } = useParams();\n  useEffect(() => {\n    if (user && user.role === 'student') {\n      getStudent(user.id).then((userData) => {\n        setUser({ role: 'student', ...userData });\n      });\n    }\n  }, []);\n  useEffect(async () => {\n    if (user) {\n      const majorAndGeneralCourses = await getAllCoursesByMajorAndLevel(\n        user.major ? user.major.code : 0,\n        props.level\n      );\n      const minorCourses = await getAllCoursesByMinorAndLevel(\n        user.minor ? user.minor.code : 0,\n        props.level\n      );\n      setCourses([...majorAndGeneralCourses, ...minorCourses]);\n    }\n  }, []);\n  const isEligble = (loggeduser, inputCourse) =>\n    loggeduser &&\n    inputCourse.prerequisites\n      .map((course) => course.id)\n      .every((id) =>\n        user.coursesFinished.map((course) => course.courseId).includes(id)\n      );\n  const isCourseTaken = (loggeduser, inputCourse) =>\n    loggeduser &&\n    user.coursesFinished.some((course) => course.courseId === inputCourse.id);\n\n  const isPassed = (loggeduser, inputCourse) =>\n    loggeduser &&\n    user.coursesFinished.some(\n      (course) => course.courseId === inputCourse.id && course.grade > 50\n    );\n\n  const handleEnroll = async (userId, courseId, courseName, credit) => {\n    await createEnrollment({\n      studentID: userId,\n      courseID: courseId,\n      semesterId,\n      credit\n    });\n    await createNotificationForSupervisor(user.supervisorId, {\n      data: {\n        title: 'Enrollment Request',\n        senderName: ` ${user.fname} ${user.lname}`,\n        text: `requested new registration in course ${courseName} `,\n        subText: 'need review',\n        avatar: user.avatar,\n        senderEmail: user.email\n      }\n    }).then((res) => console.log(res));\n    if (user && user.role === 'student') {\n      getStudent(user.id).then((userData) => {\n        setUser({ role: 'student', ...userData });\n      });\n    }\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const courseTableMetaData = [\n    'courseCode',\n    'Course title',\n    'Credit',\n    'Eligible',\n    'prerequisites',\n    'Enroll'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {courseTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {courses\n                // .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map(\n                  (courseData) =>\n                    !(\n                      isCourseTaken(user, courseData) &&\n                      isPassed(user, courseData)\n                    ) && (\n                      <TableRow hover key={courseData.id}>\n                        <TableCell>{courseData.courseCode}</TableCell>\n                        <TableCell>\n                          <Box\n                            sx={{\n                              alignItems: 'center',\n                              display: 'flex'\n                            }}\n                          >\n                            <Typography color=\"textPrimary\" variant=\"body1\">\n                              {courseData.name}\n                            </Typography>\n                          </Box>\n                        </TableCell>\n                        <TableCell>{courseData.credit}</TableCell>\n                        <TableCell>\n                          {isEligble(user, courseData) ? (\n                            <Grid\n                              container\n                              flexDirection=\"column\"\n                              columnGap={1}\n                              justifyContent=\"center\"\n                              alignItems=\"center\"\n                            >\n                              <Chip\n                                icon={<CheckCircleOutlineIcon />}\n                                label=\"Eligible\"\n                                clickable\n                                color=\"primary\"\n                                variant=\"outlined\"\n                              />\n                              {courseData.major &&\n                              user.major.code === courseData.major.code ? (\n                                <>\n                                  <Chip\n                                    label={`Major : ${user.major.name}`}\n                                    clickable\n                                    color=\"primary\"\n                                    variant=\"outlined\"\n                                  />\n                                  <Chip\n                                    label={`type : ${courseType(\n                                      courseData.type\n                                    )}\n                                    `}\n                                    clickable\n                                    color=\"default\"\n                                    variant=\"outlined\"\n                                  />\n                                </>\n                              ) : courseData.major &&\n                                user.minor.code === courseData.major.code ? (\n                                <Chip\n                                  label={`Minor : ${courseData.major.name}`}\n                                  clickable\n                                  color=\"primary\"\n                                  variant=\"outlined\"\n                                />\n                              ) : (\n                                <Chip\n                                  label={`type : ${courseType(courseData.type)}\n                                `}\n                                  clickable\n                                  color=\"default\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            </Grid>\n                          ) : (\n                            <Grid\n                              container\n                              flexDirection=\"column\"\n                              justifyContent=\"center\"\n                              alignItems=\"center\"\n                            >\n                              <Chip\n                                icon={<HighlightOffIcon />}\n                                label=\"Not eligible\"\n                                clickable\n                                color=\"secondary\"\n                                variant=\"outlined\"\n                              />\n                              {courseData.major &&\n                              user.major.code === courseData.major.code ? (\n                                <>\n                                  <Chip\n                                    label={`Major : ${user.major.name}`}\n                                    clickable\n                                    color=\"primary\"\n                                    variant=\"outlined\"\n                                  />\n                                  <Chip\n                                    label={`type : ${courseType(\n                                      courseData.type\n                                    )}\n                                    `}\n                                    clickable\n                                    color=\"default\"\n                                    variant=\"outlined\"\n                                  />\n                                </>\n                              ) : courseData.major &&\n                                user.minor.code === courseData.major.code ? (\n                                <Chip\n                                  label={`Minor : ${courseData.major.name}`}\n                                  clickable\n                                  color=\"primary\"\n                                  variant=\"outlined\"\n                                />\n                              ) : (\n                                <Chip\n                                  label={`type : ${courseType(courseData.type)}\n                                `}\n                                  clickable\n                                  color=\"default\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            </Grid>\n                          )}\n                        </TableCell>\n\n                        <TableCell>\n                          {isEligble(user, courseData) ? (\n                            <AlertDialog\n                              buttonText=\"show prerequisites\"\n                              title={`Course ${courseData.name} prerequisites :`}\n                              color=\"primary\"\n                              data={\n                                <List\n                                  subheader=\"Prerequisites :\"\n                                  alignItems=\"flex-start\"\n                                >\n                                  {courseData.prerequisites.map((course) => (\n                                    <ListItem divider key={course.id}>\n                                      {`Course : ${course.name} - level: ${course.level}`}\n                                    </ListItem>\n                                  ))}\n                                </List>\n                              }\n                            />\n                          ) : (\n                            <AlertDialog\n                              buttonText=\"show prerequisites\"\n                              title={`Course : ${courseData.name} `}\n                              color=\"secondary\"\n                              data={\n                                <List\n                                  subheader=\"Prerequisites :\"\n                                  alignItems=\"flex-start\"\n                                >\n                                  {courseData.prerequisites.map((course) => (\n                                    <ListItem divider key={course.id}>\n                                      {`Course : ${course.name} - level: ${course.level}`}\n                                    </ListItem>\n                                  ))}\n                                </List>\n                              }\n                            />\n                          )}\n                        </TableCell>\n\n                        <TableCell>\n                          {isEligble(user, courseData) ? (\n                            <Box color=\"secondary\" variant=\"outlined\">\n                              {user.enrollments\n                                .map((enrollment) => enrollment.courseID)\n                                .includes(courseData.id) ? (\n                                <Grid\n                                  container\n                                  flexDirection=\"column\"\n                                  spacing={1}\n                                  justifyContent=\"center\"\n                                  alignItems=\"center\"\n                                >\n                                  <Grid item>\n                                    <Chip\n                                      icon={<CheckCircleOutlineIcon />}\n                                      label=\"currently enrolled\"\n                                      clickable\n                                      color=\"primary\"\n                                      variant=\"outlined\"\n                                    />\n                                  </Grid>\n                                  <Grid item>\n                                    <Chip\n                                      icon={<InfoOutlinedIcon />}\n                                      label={\n                                        user.enrollments.find(\n                                          (enrollment) =>\n                                            enrollment.courseID ===\n                                            courseData.id\n                                        ).status\n                                      }\n                                      clickable\n                                      color=\"default\"\n                                      variant=\"outlined\"\n                                    />\n                                  </Grid>\n                                </Grid>\n                              ) : (\n                                <Button\n                                  variant=\"outlined\"\n                                  onClick={() =>\n                                    handleEnroll(\n                                      user.id,\n                                      courseData.id,\n                                      courseData.name,\n                                      courseData.credit\n                                    )\n                                  }\n                                  disabled={\n                                    props.creditHave < courseData.credit\n                                  }\n                                >\n                                  Enroll\n                                </Button>\n                              )}\n                            </Box>\n                          ) : (\n                            <Button primary disabled variant=\"outlined\">\n                              Enroll\n                            </Button>\n                          )}\n                        </TableCell>\n                      </TableRow>\n                    )\n                )}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={courses.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default CourseRegistrationListResults;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst CourseRegistrationListToolbar = ({ ...props }) => (\n  <Box {...props}>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <Typography variant=\"h3\">{`Level : ${props.level}`}</Typography>\n            <Typography variant=\"subtitle1\">\n              {`remaining credit hours : ${props.creditHave} credit hours`}\n            </Typography>\n            {/* <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon fontSize=\"small\" color=\"action\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search by supervisor name\"\n              variant=\"outlined\"\n            /> */}\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default CourseRegistrationListToolbar;\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-unused-vars */\nimport { Helmet } from 'react-helmet';\nimport { useContext } from 'react';\nimport { Box, Container } from '@material-ui/core';\nimport CourseRegistrationListResults from 'src/components/course/CourseRegistrationListResults';\nimport CourseRegistrationListToolbar from 'src/components/course/courseRegistrationListToolbar';\n\nimport { UserContext } from '../../API/auth';\n\nconst CourseRegistration = () => {\n  const { user } = useContext(UserContext);\n  const { creditHave } = user.semesters[0];\n  return (\n    <>\n      <Helmet>\n        <title>Course Registration</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        {[...Array(user.level).keys()].map((level) => (\n          <Container maxWidth={false}>\n            <Box sx={{ pt: 3 }}>\n              <CourseRegistrationListToolbar\n                level={level + 1}\n                creditHave={creditHave}\n              />\n            </Box>\n            <Box sx={{ pt: 3 }}>\n              <CourseRegistrationListResults\n                level={level + 1}\n                key={level + 1}\n                creditHave={creditHave}\n              />\n            </Box>\n          </Container>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default CourseRegistration;\n","/* eslint-disable consistent-return */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable indent */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport ReportIcon from '@material-ui/icons/Report';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { getCoursesFinishedByStudent } from 'src/API/studentAPI';\nimport { gpaConverter } from 'src/utils/gpa';\nimport { UserContext } from '../../API/auth';\n\nconst CourseFinishedListResults = ({ ...props }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [courses, setCourses] = useState([]);\n  const { user } = useContext(UserContext);\n  useEffect(() => {\n    if (user && user.role === 'student') {\n      setCourses(user.coursesFinished);\n    } else {\n      getCoursesFinishedByStudent(props.studentID).then((coursesData) => {\n        setCourses(coursesData);\n      });\n    }\n  }, []);\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const courseTableMetaData = [\n    'courseCode',\n    'Course title',\n    'instructor',\n    'Grade',\n    'Result'\n  ];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {courseTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {courses\n                // .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((courseData) => (\n                  <TableRow hover key={courseData.courseId}>\n                    <TableCell>{courseData.course.courseCode}</TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {courseData.course.name}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n\n                    <TableCell>{`DR. ${courseData.instructor.fname} ${courseData.instructor.lname} `}</TableCell>\n                    <TableCell>{gpaConverter(courseData.grade)}</TableCell>\n\n                    <TableCell>\n                      {gpaConverter(courseData.grade) === 'F' ? (\n                        <Chip\n                          icon={<ReportIcon />}\n                          label=\"Fail\"\n                          clickable\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                        />\n                      ) : (\n                        <Chip\n                          icon={<CheckCircleOutlineIcon />}\n                          label=\"Success\"\n                          clickable\n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={courses.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default CourseFinishedListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\nimport CourseFinishedListResults from 'src/components/course/CourseFinishedListResults';\n\nconst CourseFinished = () => (\n  <>\n    <Helmet>\n      <title>Course Registration</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Box sx={{ pt: 3 }}>\n          <CourseFinishedListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default CourseFinished;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useContext } from 'react';\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport uploadImg from 'src/API/filesAPI';\nimport { updateStudentAvatar } from 'src/API/studentAPI';\nimport { UserContext } from '../../../API/auth';\n\nconst StudentProfile = (props) => {\n  const { user, setUser } = useContext(UserContext);\n  const handleAddfile = async (event) => {\n    const img = event.target.files[0];\n    const res = await uploadImg(img, Date.now() + img.name);\n    const updateAvatar = await updateStudentAvatar(\n      user.id,\n      `/static/images/avatars/${res}`\n    );\n    setUser(updateAvatar);\n  };\n  return (\n    <Card {...props}>\n      <CardContent>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Avatar\n            src={user.avatar}\n            sx={{\n              height: 100,\n              width: 100\n            }}\n          />\n          <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n            {` ${user.fname} ${user.lname}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions style={{ justifyContent: 'center' }}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          encType=\"multipart/form-data\"\n          {...props}\n        >\n          <input\n            style={{ display: 'none' }}\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={handleAddfile}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              fullWidth\n            >\n              Upload picture\n            </Button>\n          </label>\n        </form>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default StudentProfile;\n","import { useContext } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\n\nimport { UserContext } from '../../../API/auth';\n\nconst StudentProfileDetails = (props) => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can not be edited by student\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"fname\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.fname}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.lname}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Level\"\n                name=\"Level\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                type=\"number\"\n                value={user.level}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"credits Earned\"\n                name=\"creditDone\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                type=\"number\"\n                value={user.creditDone}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"CGPA\"\n                name=\"CGPA\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                value={user.numericalGPA.toFixed(2)}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last Term GPA\"\n                name=\"lastTermGPA\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                type=\"number\"\n                value={user.numericalLastTermGPA.toFixed(2)}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <SettingsPassword />\n      </Card>\n    </form>\n  );\n};\n\nexport default StudentProfileDetails;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport StudentProfile from 'src/components/student/studentprofile/StudentProfile';\nimport StudentProfileDetails from 'src/components/student/studentprofile/StudentProfileDetails';\n\nconst StudentAccount = () => (\n  <>\n    <Helmet>\n      <title>Course details</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={4} md={6} xs={12}>\n            <StudentProfile />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <StudentProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default StudentAccount;\n","import { useState, useContext, useEffect } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  MenuItem,\n  Snackbar,\n  TextField\n} from '@material-ui/core';\nimport { createOne } from 'src/API/studentAPI';\nimport { getAllMajors } from 'src/API/majorAPI';\nimport { getAllSuperVisors } from 'src/API/superVisorAPI';\nimport { UserContext } from '../../API/auth';\n\nconst AddStudent = (props) => {\n  const [values, setValues] = useState({});\n  const [open, setOpen] = useState(false);\n  const [supervisors, setSupervisors] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(async () => {\n    const majorsData = await getAllMajors();\n    setMajors(majorsData);\n  }, []);\n  useEffect(async () => {\n    const supervisorsData = await getAllSuperVisors();\n    setSupervisors(supervisorsData);\n  }, []);\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n      coordinatorId: user.id\n    });\n  };\n  // const handleSelectMajor = (event) => {\n  //   setMajor(event.target.value);\n  // };\n  const handleAdd = () => {\n    createOne({ ...values }).then(() => {\n      console.log(values);\n      setOpen(true);\n    });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can not be edited by student\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"fname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"Gender\"\n                name=\"gender\"\n                onChange={handleChange}\n                fullWidth\n              >\n                {['MALE', 'FEMALE'].map((gender) => (\n                  <MenuItem key={gender} value={gender}>\n                    {gender}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"major\"\n                fullWidth\n                name=\"majorId\"\n                onChange={handleChange}\n                helperText=\"Please select student major\"\n              >\n                {majors.map((majorData) => (\n                  <MenuItem key={majorData.id} value={majorData.id}>\n                    {majorData.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"minor\"\n                name=\"minorId\"\n                onChange={handleChange}\n                helperText=\"Please select student minor\"\n              >\n                {majors.map((majorData) => (\n                  <MenuItem key={majorData.id} value={majorData.id}>\n                    {majorData.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"Academic Advisor\"\n                name=\"supervisorId\"\n                onChange={handleChange}\n                helperText=\"Please select student Academic Advisor\"\n              >\n                {supervisors.map((supervisorData) => (\n                  <MenuItem key={supervisorData.id} value={supervisorData.id}>\n                    {` DR. ${supervisorData.fname} ${supervisorData.lname}`}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <TextField\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              label=\"Confirm password\"\n              margin=\"normal\"\n              name=\"confirm\"\n              onChange={handleChange}\n              type=\"password\"\n              value={values.confirm}\n              variant=\"outlined\"\n            />\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAdd}>\n            Add\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: Student created\n            </Alert>\n          </Snackbar>\n        </Box>\n        <Divider />\n      </Card>\n    </form>\n  );\n};\n\nexport default AddStudent;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AddStudent from 'src/components/student/AddStudent';\n\nconst AddStudentPage = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <AddStudent />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default AddStudentPage;\n","import { useState, useContext } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  Snackbar,\n  TextField\n} from '@material-ui/core';\nimport { createOne } from 'src/API/superVisorAPI';\nimport { UserContext } from '../../API/auth';\n\nconst AddSuperVisor = (props) => {\n  const [values, setValues] = useState({});\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(UserContext);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n      coordinatorId: user.id\n    });\n  };\n\n  const handleAdd = () => {\n    createOne(values).then(setOpen(true));\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"fname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                type=\"number\"\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid>\n              <TextField\n                fullWidth\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n              <TextField\n                fullWidth\n                label=\"Confirm password\"\n                margin=\"normal\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAdd}>\n            Add\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: Academic Advisor Created\n            </Alert>\n          </Snackbar>\n        </Box>\n        <Divider />\n      </Card>\n    </form>\n  );\n};\n\nexport default AddSuperVisor;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AddSuperVisor from 'src/components/superVisor/AddSupervisor';\n\nconst AddSuperVisorPage = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <AddSuperVisor />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default AddSuperVisorPage;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\n// import EnrollmentListToolbar from 'src/components/enrollment/EnrollmentListToolbar';\nimport { useParams } from 'react-router-dom';\nimport StudentEnrolledCoursesListResults from 'src/components/enrollment/StudentEnrolledCoursesListResults';\n\nconst StudentEnrolledCourses = () => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Helmet>\n        <title>Current Enrolled courses</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          {/* <EnrollmentListToolbar /> */}\n          <Box sx={{ pt: 3 }}>\n            <StudentEnrolledCoursesListResults id={id} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default StudentEnrolledCourses;\n","/* eslint-disable no-unused-vars */\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  Button\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst CoordinatorListToolbar = (props) => {\n  const navigate = useNavigate();\n  const handleAddButton = () => {\n    navigate('/app/coordinator/add');\n  };\n  return (\n    <Box {...props}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        <Button color=\"primary\" variant=\"contained\" onClick={handleAddButton}>\n          Add Coordinator\n          <AddIcon />\n        </Button>\n      </Box>\n      {/* <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon fontSize=\"small\" color=\"action\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search by supervisor name\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box> */}\n    </Box>\n  );\n};\n\nexport default CoordinatorListToolbar;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { getAllCoordinators } from 'src/API/coordinatorAPI';\n\n// import getInitials from 'src/utils/getInitials';\n\nconst CoordinatorListResults = () => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [coordinators, setCoordinator] = useState([]);\n\n  useEffect(() => {\n    getAllCoordinators().then((coordinatorData) =>\n      setCoordinator(coordinatorData)\n    );\n  }, []);\n  console.log(coordinators);\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const superVisorTableMetaData = ['Id', 'Academic Advisor name', 'email'];\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {superVisorTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {coordinators\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((coordinatorData) => (\n                  <TableRow hover key={coordinatorData.id}>\n                    <TableCell>{coordinatorData.id}</TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${coordinatorData.fname} ${coordinatorData.lname}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{coordinatorData.email}</TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={coordinators.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default CoordinatorListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport CoordinatorListToolbar from 'src/components/coordinator/CoordinatorListToolbar';\nimport CoordinatorListResults from 'src/components/coordinator/CoordinatorListResults';\n\nconst CoordinatorList = () => (\n  <>\n    <Helmet>\n      <title>supervisors</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <CoordinatorListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <CoordinatorListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default CoordinatorList;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useContext } from 'react';\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport { updateCoordinatorAvatar } from 'src/API/coordinatorAPI';\nimport uploadImg from 'src/API/filesAPI';\nimport { UserContext } from '../../../API/auth';\n\nconst CoordinatorProfile = (props) => {\n  const { user, setUser } = useContext(UserContext);\n  const handleAddfile = async (event) => {\n    const img = event.target.files[0];\n    const res = await uploadImg(img, Date.now() + img.name);\n    const updateAvatar = await updateCoordinatorAvatar(\n      user.id,\n      `/static/images/avatars/${res}`\n    );\n    setUser(updateAvatar);\n  };\n  return (\n    <Card {...props}>\n      <CardContent>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Avatar\n            src={user.avatar}\n            sx={{\n              height: 100,\n              width: 100\n            }}\n          />\n          <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n            {`DR. ${user.fname} ${user.lname}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions style={{ justifyContent: 'center' }}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          encType=\"multipart/form-data\"\n          {...props}\n        >\n          <input\n            style={{ display: 'none' }}\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={handleAddfile}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              fullWidth\n            >\n              Upload picture\n            </Button>\n          </label>\n        </form>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default CoordinatorProfile;\n","import { useContext } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\nimport { UserContext } from '../../../API/auth';\n\nconst CoordinatorProfileDetails = (props) => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"fname\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.fname}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.lname}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                required\n                value={user.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                InputProps={{\n                  readOnly: true\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                type=\"number\"\n                value={user.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <SettingsPassword />\n      </Card>\n    </form>\n  );\n};\n\nexport default CoordinatorProfileDetails;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport CoordinatorProfile from 'src/components/coordinator/coordinatorProfile/CoordinatorProfile';\nimport CoordinatorProfileDetails from 'src/components/coordinator/coordinatorProfile/CoordinatorProfileDetails';\n\nconst CoordinatorAccount = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={4} md={6} xs={12}>\n            <CoordinatorProfile />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <CoordinatorProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default CoordinatorAccount;\n","import { useState } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  Snackbar,\n  TextField\n} from '@material-ui/core';\nimport { createOneCoordinator } from 'src/API/coordinatorAPI';\n\nconst AddCoordinator = (props) => {\n  const [values, setValues] = useState({});\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleAdd = () => {\n    createOneCoordinator(values).then(setOpen(true));\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"fname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                type=\"number\"\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid>\n              <TextField\n                fullWidth\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n              <TextField\n                fullWidth\n                label=\"Confirm password\"\n                margin=\"normal\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAdd}>\n            Add\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: AddCoordinator Created\n            </Alert>\n          </Snackbar>\n        </Box>\n        <Divider />\n      </Card>\n    </form>\n  );\n};\n\nexport default AddCoordinator;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AddCoordinator from 'src/components/coordinator/AddCoordinator';\n\nconst AddCoordinatorPage = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <AddCoordinator />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default AddCoordinatorPage;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n//  const PORT = process.env.PORT || 8888;\n// const api = `http://localhost:${PORT}`;\n\nconst api = ''; // for production use => paths are relative\n\nconst headers = {\n  Accept: 'application/json'\n};\n\nexport const getAllSemesters = () =>\n  fetch(`${api}/semesters`, { headers }).then((res) => res.json());\n\nexport const getOneSemester = (id) =>\n  fetch(`${api}/semester/${id}`, { headers }).then((res) => res.json());\n\nexport const createSemester = ({ type, year, coordinatorId }) =>\n  fetch(`${api}/semester`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ type, year, coordinatorId })\n  }).then((res) => res.json());\n\nexport const endSemester = (id) =>\n  fetch(`${api}/semester/${id}/end`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const closeRegistrationForSemester = (id) =>\n  fetch(`${api}/semester/${id}/close`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const openRegistrationForSemester = (id) =>\n  fetch(`${api}/semester/${id}/open`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const startSemester = (id) =>\n  fetch(`${api}/semester/${id}/start`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n\nexport const createStudentSemester = ({ studentId, semesterId }) =>\n  fetch(`${api}/student/${studentId}/semester/${semesterId}`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n","/* eslint-disable react/prop-types */\n/* eslint-disable consistent-return */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Chip,\n  Button,\n  Grid\n} from '@material-ui/core';\nimport {\n  openRegistrationForSemester,\n  endSemester,\n  startSemester,\n  closeRegistrationForSemester\n} from 'src/API/semesterAPI';\nimport { CheckCircleOutline } from '@material-ui/icons';\n\n// import getInitials from 'src/utils/getInitials';\n\nconst SemesterListResults = ({ UpdateSemestersData, semestersData }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const semesters = semestersData;\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const semesterTableMetaData = ['semester', 'status', 'action'];\n\n  const statusChip = (status) => {\n    if (status === 'open') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"open for registration\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n    if (status === 'closed') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"registration closed\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n    if (status === 'current') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"current semester\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n    if (status === 'finished') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"finished\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n  };\n\n  const actionsByStatus = (status, id) => {\n    if (status === 'open') {\n      return (\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            closeRegistrationForSemester(id);\n            UpdateSemestersData();\n          }}\n        >\n          close registration\n        </Button>\n      );\n    }\n    if (status === 'closed') {\n      return (\n        <Grid\n          container\n          flexDirection=\"column\"\n          spacing={1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                openRegistrationForSemester(id);\n                UpdateSemestersData();\n              }}\n            >\n              Open Again\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              onClick={async () => {\n                const res = await startSemester(id);\n                if (res.error) alert(res.error);\n                UpdateSemestersData();\n              }}\n            >\n              start semester\n            </Button>\n          </Grid>\n        </Grid>\n      );\n    }\n    if (status === 'current') {\n      return (\n        <Button\n          variant=\"outlined\"\n          onClick={async () => {\n            const res = await endSemester(id);\n            if (res.error) alert(res.error);\n            UpdateSemestersData();\n          }}\n        >\n          End semester\n        </Button>\n      );\n    }\n    if (status === 'finished') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"no action\"\n          color=\"primary\"\n          variant=\"filled\"\n        />\n      );\n    }\n  };\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {semesterTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {semesters\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((semesterData) => (\n                  <TableRow hover key={semesterData.id}>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${semesterData.type} ${semesterData.year}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{statusChip(semesterData.status)}</TableCell>\n                    <TableCell>\n                      {actionsByStatus(semesterData.status, semesterData.id)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={semesters.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default SemesterListResults;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport typography from 'src/theme/typography';\n\nconst SemesterListToolbar = ({ enableAddSemester }) => {\n  const navigate = useNavigate();\n  const handleAddButton = () => {\n    navigate('/app/semester/add');\n  };\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        <Button\n          color=\"primary\"\n          disabled={!enableAddSemester}\n          variant=\"contained\"\n          onClick={handleAddButton}\n        >\n          Add semester\n          <AddIcon />\n        </Button>\n      </Box>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box sx={{ maxWidth: 500 }}>\n              <Typography variant=\"subtitle1\">\n                note : all semesters must be finished to add new semester\n              </Typography>\n              {/* <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon fontSize=\"small\" color=\"action\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search by supervisor name\"\n              variant=\"outlined\"\n            /> */}\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SemesterListToolbar;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport SemesterListResults from 'src/components/semester/SemesterListResults';\nimport SemesterListToolbar from 'src/components/semester/SemesterListToolbar';\nimport { getAllSemesters } from 'src/API/semesterAPI';\nimport { useEffect, useState } from 'react';\n\nconst SemesterList = () => {\n  const [semestersData, setsemesters] = useState([]);\n\n  useEffect(async () => {\n    await getAllSemesters().then((Data) => setsemesters(Data));\n    console.log(semestersData);\n  }, []);\n\n  const UpdateSemestersData = async () => {\n    await getAllSemesters().then((Data) => setsemesters(Data));\n  };\n  const enableAddSemester = semestersData.every(\n    (semester) => semester.status === 'finished'\n  );\n  return (\n    <>\n      <Helmet>\n        <title>Semesters list</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <SemesterListToolbar enableAddSemester={enableAddSemester} />\n          <Box sx={{ pt: 3 }}>\n            <SemesterListResults\n              semestersData={semestersData}\n              UpdateSemestersData={UpdateSemestersData}\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\nexport default SemesterList;\n","import { useState, useContext } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  MenuItem,\n  Snackbar,\n  TextField\n} from '@material-ui/core';\nimport { createSemester } from 'src/API/semesterAPI';\nimport { UserContext } from '../../API/auth';\n\nconst AddSemester = (props) => {\n  const [values, setValues] = useState({ year: 2021 });\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(UserContext);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n      coordinatorId: user.id\n    });\n  };\n  const handleAdd = () => {\n    createSemester({ ...values }).then(() => {\n      console.log(values);\n      setOpen(true);\n      // todo navigate\n    });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader\n          subheader=\"this semester will be open for registration by default\"\n          title=\"Add semester\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"semester\"\n                name=\"type\"\n                onChange={handleChange}\n                fullWidth\n              >\n                {['fall', 'spring', 'summer'].map((semesterType) => (\n                  <MenuItem\n                    key={semesterType}\n                    value={semesterType.toUpperCase()}\n                  >\n                    {semesterType}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"year\"\n                name=\"year\"\n                onChange={handleChange}\n                type=\"number\"\n                variant=\"outlined\"\n                value={values.year}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleAdd}>\n            Add\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: semester created\n            </Alert>\n          </Snackbar>\n        </Box>\n        <Divider />\n      </Card>\n    </form>\n  );\n};\n\nexport default AddSemester;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AddSemester from 'src/components/semester/AddSemester';\n\nconst AddSemesterPage = () => (\n  <>\n    <Helmet>\n      <title>Add semester</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <AddSemester />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default AddSemesterPage;\n","/* eslint-disable react/prop-types */\n/* eslint-disable consistent-return */\n/* eslint-disable operator-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport { useEffect, useState, useContext } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Chip,\n  Button\n} from '@material-ui/core';\nimport { createStudentSemester, getAllSemesters } from 'src/API/semesterAPI';\nimport { CheckCircleOutline } from '@material-ui/icons';\nimport { getStudent } from 'src/API/studentAPI';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../API/auth';\n\n// import getInitials from 'src/utils/getInitials';\n\nconst StudentSemesterListResults = () => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [semesters, setsemesters] = useState([]);\n  const { user, setUser } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(async () => {\n    await getAllSemesters().then((semestersData) =>\n      setsemesters(\n        semestersData.filter((semester) => semester.status !== 'finished')\n      )\n    );\n  });\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRegister = async (semesterId) => {\n    await createStudentSemester({ studentId: user.id, semesterId });\n    const updateUser = await getStudent(user.id);\n    setUser(updateUser);\n    navigate(`/app/semester/${semesterId}/registration`);\n  };\n  const semesterTableMetaData = ['semester', 'status', 'action'];\n\n  const statusChip = (status) => {\n    if (status === 'open') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"open for registration\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n    if (status === 'closed') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"registration closed\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n    if (status === 'current') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"current semester\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n    if (status === 'finished') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"finished\"\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      );\n    }\n  };\n\n  const actionsByStatus = (status, id) => {\n    if (status === 'open') {\n      return (\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            handleRegister(id);\n          }}\n        >\n          Register\n        </Button>\n      );\n    }\n    if (status === 'closed') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"Registration closed\"\n          color=\"primary\"\n          variant=\"filled\"\n        />\n      );\n    }\n    if (status === 'current') {\n      return (\n        <Chip\n          icon={<CheckCircleOutline />}\n          label=\"Registration closed\"\n          color=\"primary\"\n          variant=\"filled\"\n        />\n      );\n    }\n  };\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {semesterTableMetaData.map((metaData) => (\n                  <TableCell key={metaData}>{metaData}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {semesters\n                .slice(page === 0 ? 0 : limit * (page - 1), limit * page)\n                .map((semesterData) => (\n                  <TableRow hover key={semesterData.id}>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {`${semesterData.type} ${semesterData.year}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{statusChip(semesterData.status)}</TableCell>\n                    <TableCell>\n                      {actionsByStatus(semesterData.status, semesterData.id)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={semesters.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default StudentSemesterListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\n\nimport StudentSemesterListResults from 'src/components/semester/StudentSemesterListResults';\n\nconst StudentSemesterList = () => (\n  <>\n    <Helmet>\n      <title>Semesters list</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Box sx={{ pt: 3 }}>\n          <StudentSemesterListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\nexport default StudentSemesterList;\n","import { useState, useContext, useEffect } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  MenuItem,\n  Snackbar,\n  TextField\n} from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport { getStudent, updateStudent } from 'src/API/studentAPI';\nimport { getAllMajors } from 'src/API/majorAPI';\nimport { getAllSuperVisors } from 'src/API/superVisorAPI';\nimport { UserContext } from 'src/API/auth';\n\nconst EditStudent = (props) => {\n  const [values, setValues] = useState({});\n  const [open, setOpen] = useState(false);\n  const [supervisors, setSupervisors] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const { user } = useContext(UserContext);\n  const { id } = useParams();\n\n  useEffect(async () => {\n    const student = await getStudent(id);\n    console.log(student);\n    setValues({ ...student });\n  }, []);\n  useEffect(async () => {\n    const majorsData = await getAllMajors();\n    setMajors(majorsData);\n  }, []);\n  useEffect(async () => {\n    const supervisorsData = await getAllSuperVisors();\n    setSupervisors(supervisorsData);\n  }, []);\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n      coordinatorId: user.id\n    });\n  };\n  // const handleSelectMajor = (event) => {\n  //   setMajor(event.target.value);\n  // };\n  const handleUpdate = () => {\n    updateStudent(id, { ...values }).then(() => {\n      console.log(values);\n      setOpen(true);\n    });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <form autoComplete=\"off\" noValidate {...props}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can not be edited by student\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"fname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n                value={values.fname}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lname\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n                value={values.lname}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                required\n                onChange={handleChange}\n                variant=\"outlined\"\n                value={values.email}\n              />\n            </Grid>\n\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"major\"\n                fullWidth\n                name=\"majorId\"\n                onChange={handleChange}\n                helperText=\"Please select student major\"\n                value={values.majorid}\n              >\n                {majors.map((majorData) => (\n                  <MenuItem key={majorData.id} value={majorData.id}>\n                    {majorData.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"minor\"\n                name=\"minorId\"\n                onChange={handleChange}\n                helperText=\"Please select student minor\"\n                value={values.minorid}\n              >\n                {majors.map((majorData) => (\n                  <MenuItem key={majorData.id} value={majorData.id}>\n                    {majorData.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                select\n                label=\"Academic Advisor\"\n                name=\"supervisorId\"\n                onChange={handleChange}\n                helperText=\"Please select student Academic Advisor\"\n              >\n                {supervisors.map((supervisorData) => (\n                  <MenuItem key={supervisorData.id} value={supervisorData.id}>\n                    {` DR. ${supervisorData.fname} ${supervisorData.lname}`}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button color=\"primary\" variant=\"contained\" onClick={handleUpdate}>\n            update\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              success: Student updated\n            </Alert>\n          </Snackbar>\n        </Box>\n        <Divider />\n      </Card>\n    </form>\n  );\n};\n\nexport default EditStudent;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport EditStudent from 'src/components/student/studentprofile/EditStudentProfileDetails';\n\nconst EditStudentPage = () => (\n  <>\n    <Helmet>\n      <title>profile</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={8} md={6} xs={12}>\n            <EditStudent />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default EditStudentPage;\n","/* eslint-disable no-nested-ternary */\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport MainLayout from 'src/components/MainLayout';\nimport StudentList from 'src/pages/student/StudentList';\nimport Login from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport CourseList from './pages/course/CourseList';\nimport EnrollmentList from './pages/enrollments/EnrollmentList';\nimport SupervisorList from './pages/supervisor/SupervisorList';\nimport AddCoursePage from './pages/course/AddCoursePage';\nimport CourseDetailsPage from './pages/course/CourseDetailsPage';\nimport PlanAheadPage from './pages/PlanAhead';\nimport SuperVisorAccount from './pages/supervisor/SuperVisorAccount';\nimport StudentEnrollmentList from './pages/enrollments/StudentEnrollmentsList';\nimport CourseRegistration from './pages/course/CourseRegistration';\nimport CourseFinished from './pages/course/CourseFinished';\nimport StudentAccount from './pages/student/StudentAccount';\nimport AddStudentPage from './pages/student/AddStudentPage';\nimport AddSuperVisorPage from './pages/supervisor/AddSuperVisorPage';\nimport StudentEnrolledCourses from './pages/enrollments/StudentEnrolledCourses';\nimport CoordinatorList from './pages/coordinator/CoordinatorList';\nimport CoordinatorAccount from './pages/coordinator/CoordinatorAccount';\nimport AddCoordinatorPage from './pages/coordinator/AddCoordinatorPage';\nimport SemesterList from './pages/semester/SemesterList';\nimport AddSemesterPage from './pages/semester/AddSemesterPage';\nimport StudentSemesterList from './pages/semester/StudentSemesterList';\nimport EditStudentPage from './pages/student/EditStudentPage';\n\n// isSigned = true;\nconst routes = (user) => {\n  console.log(user);\n  return [\n    {\n      path: 'app',\n      element: user ? <DashboardLayout /> : <Navigate to=\"/login\" />,\n      children: [\n        {\n          path: 'student/:id/account',\n          element: user ? <StudentAccount /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'students',\n          element: user ? <StudentList /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'student/add',\n          element: user ? <AddStudentPage /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'student/:id/Courses',\n          element: user ? <CourseFinished /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'student/:id/enrollments',\n          element: user ? <StudentEnrollmentList /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'courses',\n          element: user ? <CourseList /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'student/:id/CurrentCourses',\n          element: user ? <StudentEnrolledCourses /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'course/add',\n          element: user ? <AddCoursePage /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'course/:id',\n          element: user ? <CourseDetailsPage /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'semester/:semesterId/registration',\n          element: user ? <CourseRegistration /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: '/semesters/registration',\n          element: user ? <StudentSemesterList /> : <Navigate to=\"/login\" />\n        },\n\n        {\n          path: 'enrollments',\n          element: user ? <EnrollmentList /> : <Navigate to=\"/login\" />\n        },\n\n        {\n          path: 'supervisor/:id/account',\n          element: user ? <SuperVisorAccount /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'supervisors',\n          element: user ? <SupervisorList /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'supervisor/add',\n          element: user ? <AddSuperVisorPage /> : <Navigate to=\"/login\" />\n        },\n\n        {\n          path: 'coordinator/:id/account',\n          element: user ? <CoordinatorAccount /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'coordinators',\n          element: user ? <CoordinatorList /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'coordinator/add',\n          element: user ? <AddCoordinatorPage /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'semesters',\n          element: user ? <SemesterList /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'student/:id/edit',\n          element: user ? <EditStudentPage /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'semester/add',\n          element: user ? <AddSemesterPage /> : <Navigate to=\"/login\" />\n        },\n        {\n          path: 'planahead',\n          element: user ? <PlanAheadPage /> : <Navigate to=\"/login\" />\n        },\n\n        { path: '*', element: <Navigate to=\"/login\" /> }\n      ]\n    },\n    {\n      path: '/',\n      element: <MainLayout />,\n      children: [\n        { path: 'login', element: <Login /> },\n        { path: '404', element: <NotFound /> },\n        {\n          path: '/',\n          element: !user ? (\n            <Navigate to=\"/login\" />\n          ) : user.role === 'student' ? (\n            <Navigate to=\"app/student/:id/account\" />\n          ) : user.role === 'coordinator' ? (\n            <Navigate to=\"app/coordinator/:id/account\" />\n          ) : (\n            <Navigate to=\"app/supervisor/:id/account\" />\n          )\n        },\n        { path: '*', element: <Navigate to=\"/login\" /> }\n      ]\n    }\n  ];\n};\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport { useState } from 'react';\n\nimport { UserContext } from './API/auth';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const routing = useRoutes(routes(user));\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {routing}\n      </ThemeProvider>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}